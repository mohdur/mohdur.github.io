<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on MOHDUR</title>
    <link>https://mohdur.github.io/post/</link>
    <description>Recent content in Posts on MOHDUR</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 06 Dec 2020 13:35:04 +0100</lastBuildDate><atom:link href="https://mohdur.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vim jako przeglądarka stron podręcznika man</title>
      <link>https://mohdur.github.io/post/vim-jako-przegl%C4%85darka-stron-podr%C4%99cznika-man/</link>
      <pubDate>Sun, 06 Dec 2020 13:35:04 +0100</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-jako-przegl%C4%85darka-stron-podr%C4%99cznika-man/</guid>
      <description>Skrypt $HOME/bin/man-vim.sh
1#!/usr/bin/env bash 2 3if [ $# -eq 0 ]; then 4 /usr/bin/man 5else 6 if man -w $* &amp;gt;/dev/null 2&amp;gt;/dev/null; then 7 /usr/bin/man $* |col -b|vim -u $HOME/.vim/man.vim - 8 else 9 echo &amp;#34;Brak strony: $*&amp;#34; 10 fi 11fi Plik konfiguracyjny $HOME/.vim/man.vim
1source $VIMRUNTIME/defaults.vim2syntax on3set ft=man4set nolist5set buftype=nofile6nmap q :q&amp;lt;cr&amp;gt;7nmap Q :q&amp;lt;cr&amp;gt;8map n nzz9map N NzzAlias
1alias man=&amp;#34;$HOME/bin/man-vim.sh&amp;#34; </description>
    </item>
    
    <item>
      <title>KDE Caps Lock jako ESC</title>
      <link>https://mohdur.github.io/post/kde-caps-lock-jako-esc/</link>
      <pubDate>Sat, 21 Nov 2020 10:46:43 +0100</pubDate>
      
      <guid>https://mohdur.github.io/post/kde-caps-lock-jako-esc/</guid>
      <description>W środowisku KDE działanie klawisza Caps Lock można ustawić w różny sposób.
Przechodzimy do System Settings następnie wyszukujemy Keyboard na zakładce Advanced wyszukujemy Caps Lock behavior tutaj mamy różne możliwości jedną z nich jest Make Caps Lock an additinal Esc.</description>
    </item>
    
    <item>
      <title>Lista zainstalowanych czcionek</title>
      <link>https://mohdur.github.io/post/lista-zainstalowanych-czcionek/</link>
      <pubDate>Wed, 04 Nov 2020 00:36:34 +0100</pubDate>
      
      <guid>https://mohdur.github.io/post/lista-zainstalowanych-czcionek/</guid>
      <description>1$ fc-list : family style 2 3NotoSerif Nerd Font Mono:style=ExtraCondensed Medium Italic,Italic 4Lekton Nerd Font Mono:style=Bold 5NotoSansMono Nerd Font:style=SemiCondensed,Regular 6Ubuntu Nerd Font Mono:style=Book 7NotoSerifDisplay Nerd Font:style=Condensed SemiBold Italic,Italic 8NotoSansMono Nerd Font Mono:style=SemiCondensed,Regular 9Iosevka,Iosevka Nerd Font Mono:style=Medium,Regular 10URW Bookman:style=Light Italic 11Iosevka Term,Iosevka Nerd Font:style=Medium Italic,Italic 12NotoSerifDisplay Nerd Font Mono:style=Light,Regular 13Fira Code:style=Regular 14FantasqueSansMono Nerd Font Mono:style=Italic 15SauceCodePro Nerd Font Mono:style=Black,Regular 16Ubuntu Nerd Font Mono:style=Bold </description>
    </item>
    
    <item>
      <title>Instalacja RPM Fusion W Fedora Linux</title>
      <link>https://mohdur.github.io/post/instalacja-rpm-fusion-w-fedora-linux/</link>
      <pubDate>Sun, 01 Nov 2020 10:51:34 +0100</pubDate>
      
      <guid>https://mohdur.github.io/post/instalacja-rpm-fusion-w-fedora-linux/</guid>
      <description> Strona projektu https://rpmfusion.org/Configuration  1sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \ 2https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm </description>
    </item>
    
    <item>
      <title>Przyspieszenie procesu wyłączenia systemu Linux</title>
      <link>https://mohdur.github.io/post/przyspieszenie-procesu-wy%C5%82%C4%85czenia-systemu-linux/</link>
      <pubDate>Sat, 24 Oct 2020 22:00:15 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/przyspieszenie-procesu-wy%C5%82%C4%85czenia-systemu-linux/</guid>
      <description>W pliku /etc/systemd/systemd.conf należy ustawić zmienną DefaultTimeoutStopSec na np 30s standardowa wartość to 90s
1DefaultTimeoutStopSec=30s W pliku /etc/lvm/lvm.conf należy ustawić zmienną use_lvmetad na 0
1use_lvmetad = 0 </description>
    </item>
    
    <item>
      <title>Archiwizacja podkatalogów</title>
      <link>https://mohdur.github.io/post/archiwizacja-podkatalogow/</link>
      <pubDate>Sat, 24 Oct 2020 19:57:51 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/archiwizacja-podkatalogow/</guid>
      <description>Skrypt przetwarza podkatalogi w bieżącej lokalizacji, tworząc archiwa tar a następnie usuwa przetworzony katalog.
W pętli for możemy użyć maski zawężając wynik wyszukiwania np.
1for i in *dump*; do lub użyć polecenia ls np.
1for i in $(ls -A); do 1#!/usr/bin/env bash 2 3clear 4 5echo 6echo ----------------------------------------------- 7echo &amp;#34;Znajdujesz się w katalogu $PWD&amp;#34; 8echo 9echo &amp;#34;!!!UWAGA! Niebezpieczenstwo!!!&amp;#34; 10echo 11echo -n &amp;#34;Czy usunac katalogi po archiwizacji? [N/t]: &amp;#34; 12read usunac 13 14case &amp;#34;$usunac&amp;#34; in 15 &amp;#34;N&amp;#34;|&amp;#34;n&amp;#34;) usunac=false ;; 16 &amp;#34;T&amp;#34;|&amp;#34;t&amp;#34;) usunac=true ;; 17 *) usunac=false ;; 18esac 19 20if [ $# -gt 0 ]; then 21 case &amp;#34;$1&amp;#34; in 22 &amp;#34;tar&amp;#34;) ext=tar ;; 23 &amp;#34;tgz&amp;#34;|&amp;#34;tar.</description>
    </item>
    
    <item>
      <title>Zmiana częstotliwości powtarzania klawiszy</title>
      <link>https://mohdur.github.io/post/zmiana-cz%C4%99stotliwo%C5%9Bci-powtarzania-klawiszy/</link>
      <pubDate>Sat, 24 Oct 2020 19:56:37 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zmiana-cz%C4%99stotliwo%C5%9Bci-powtarzania-klawiszy/</guid>
      <description>Jeśli jesteś niecierpliwy i nie lubisz czekać, aż linia wypełni się jednym znakiem, lub skasujesz dużą część tekstu klawiszem Backspace, to pomoże Ci komenda xset, która potrafi zmienić częstotliwość powtarzania klawiszy, oraz czas do uruchomienia tej procedury.
Składnia Ogólna składnia polecenia xset:
1xset r rate [deleay [rate]] Kiedy przyciśniemy klawisz na klawiaturze i cały czas będziemy go trzymać, to po chwili przyciśnięty znak zacznie się powtarzać. Ten czas kiedy należy odczekać zanim znak zacznie się powtarzać można ustawić za pomocą parametru deleay komendy xset.</description>
    </item>
    
    <item>
      <title>Zabezpieczenie kodów jednorazowych kluczem PGP</title>
      <link>https://mohdur.github.io/post/zabezpieczenie-kod%C3%B3w-jednorazowych-kluczem-pgp/</link>
      <pubDate>Sat, 24 Oct 2020 19:53:23 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zabezpieczenie-kod%C3%B3w-jednorazowych-kluczem-pgp/</guid>
      <description>Kody jednorazowe czyli One Time Password (OTP) służą jako dodatkowe zabezpieczenie np. konta e-mail. Do generowania kodów przeważnie używa się aplikacji na telefon typu Google Authenticator. Do wygenerowania kodu OTP jest potrzebny tajny kod w postaci ciągu znaków Base32 lub Hex.
W systemmie Linux istnieje takie narzędzie jak oathtool, jednak za każdym razem trzeba podać tajny kod, wię jest to dość uciążliwe. Dlatego do przechowywania kodów użyjemy programu pass, który potrafi szyfrować hasła za pomocą klucza PGP.</description>
    </item>
    
    <item>
      <title>Wysyłanie wiadomość za pomocą GMail i Python 3</title>
      <link>https://mohdur.github.io/post/wysy%C5%82anie-wiadomo%C5%9B%C4%87-za-pomoc%C4%85-gmail-i-python-3/</link>
      <pubDate>Sat, 24 Oct 2020 19:48:57 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/wysy%C5%82anie-wiadomo%C5%9B%C4%87-za-pomoc%C4%85-gmail-i-python-3/</guid>
      <description>Wiadomości można wysyłać po utworzeniu hasła aplikacji lub zezwolenie na mniej bezpieczne logowanie w poczcie GMail.
Skrypt wymaga biblioteki SMTPEmail
1$ pip3 install smtpemail --user 1#!/usr/bin/env python3 2# coding=utf-8 3 4# File Name : mail.py 5# Creation Date : 2019-03-07 23:37:09 6# Last Modified : 2019-03-07 23:48:29 7 8 9import smtplib 10import ssl 11from email.mime.text import MIMEText 12from email.utils import COMMASPACE, formatdate 13 14smtp_server = &amp;#39;smtp.gmail.com&amp;#39; 15port = 587 16fromaddr = &amp;#34;user@gmail.</description>
    </item>
    
    <item>
      <title>Wyłączenie szyfrowania vino Vnc</title>
      <link>https://mohdur.github.io/post/wy%C5%82%C4%85czenie-szyfrowania-vino-vnc/</link>
      <pubDate>Sat, 24 Oct 2020 19:46:38 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/wy%C5%82%C4%85czenie-szyfrowania-vino-vnc/</guid>
      <description>Należy zaznaczyć, że nie jest to najlepszy pomysł, żeby wyłączać szyfrowanie czegokolwiek. Niestety Ubuntu wprowadziło szyfrowanie, którego nie obsługuje żaden klient VNC pod systemy Windows, przynajmniej ja nic o tym nie wiem, raz mi się udało podłączyć za pomocą UltraVNC + plugin DSM, ale to tylko raz. Alternatywnym rozwiązaniem może być skorzystanie z innego serwera VNC np: x11vnc.
1$ gsettings set org.gnome.Vino require-encryption false Jeśli już zdecydujemy się na wyłączenie szyfrowania, to warto skorzystać z tunelowania połączenia protokołem SSH.</description>
    </item>
    
    <item>
      <title>Wyłączenie IPv6 w Arch</title>
      <link>https://mohdur.github.io/post/wy%C5%82%C4%85czenie-ipv6-w-arch/</link>
      <pubDate>Sat, 24 Oct 2020 19:45:13 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/wy%C5%82%C4%85czenie-ipv6-w-arch/</guid>
      <description>Wyłączenie IPv6 w Arch Linux Do pliku /etc/default/grub dodajemy ipv6.disable=1 w wierszu GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot; ipv6.disable=1 &amp;quot;
Aktualizacja grub
1sudo grub-mkconfig -o /boot/grub/grub.cfg Po restarcie możemy sprawdzić czy system obsługuje IPv6
1test -f /proc/net/if_inet6 &amp;amp;&amp;amp; echo &amp;#34;IPv6 supported&amp;#34; || echo &amp;#34;IPv6 not supported&amp;#34; </description>
    </item>
    
    <item>
      <title>Vim otworzenie pliku tam gdzie skończyliśmy pracę</title>
      <link>https://mohdur.github.io/post/vim-otworzenie-pliku-tam-gdzie-sko%C5%84czyli%C5%9Bmy-prac%C4%99/</link>
      <pubDate>Sat, 24 Oct 2020 19:43:27 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-otworzenie-pliku-tam-gdzie-sko%C5%84czyli%C5%9Bmy-prac%C4%99/</guid>
      <description>Żeby Vim pamiętał gdzie skończyliśmy pracę trzeba dodać do pliku .vimrc dwie linie:
1au BufWinLeave * mkview 2au BufWinEnter * silent loadview Jeśli używasz edytora NeoVim to musisz dodać po słowie silent znak !.
1au BufWinLeave * mkview 2au BufWinEnter * silent! loadview </description>
    </item>
    
    <item>
      <title>Vim jak zamienić dwukropek na znak równości</title>
      <link>https://mohdur.github.io/post/vim_jak_zamienic_dwukropek_na_znak_rownosci/</link>
      <pubDate>Sat, 24 Oct 2020 19:41:57 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim_jak_zamienic_dwukropek_na_znak_rownosci/</guid>
      <description>Ciąg znaków mamy taki:
1zmienna: 25 i chcemy go zamienić na:
1zmienna=25 Jak to zrobić?
1f:cf =  f: - wyszukuje znak : cf  - usuwa wszystko do znaku spacji i przechodzi w tryb wprowadzania = - wprowadza znak =  </description>
    </item>
    
    <item>
      <title>Vim zawijanie tekstu na 80 znaków</title>
      <link>https://mohdur.github.io/post/vim-zawijanie-tekstu-na-80-znakow/</link>
      <pubDate>Sat, 24 Oct 2020 19:40:53 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-zawijanie-tekstu-na-80-znakow/</guid>
      <description>Ustawiamy zawijanie na 80 znaków
1:set textwidth=80 Teraz należy zaznaczyć tekst w trybie wizualnym za pomocą V
Za pomocą skrótu gq zawijamy tekst.</description>
    </item>
    
    <item>
      <title>Vim wstawienie X znaków</title>
      <link>https://mohdur.github.io/post/vim-wstawienie-x-znak%C3%B3w/</link>
      <pubDate>Sat, 24 Oct 2020 19:39:47 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-wstawienie-x-znak%C3%B3w/</guid>
      <description>Wstawienie X razy dowolnego znaku w Vim wymaga następującej składni w trybie NORMAL.
1[ilość][tryb][znak]&amp;lt;ESC&amp;gt; Tryby wprowadzania:
1i - wprowadza znak przed kursorem 2a - wprowadza znak za kursorem 3I - wprowadza znak na początku linii 4A - wprowadza znak na końcu linii 5o - wprowadza znak w kolejnych wierszach linię poniżej 6O - wprowadza znak w kolejnych wierszach linię powyżej 7r - zamiana znaku wybraną ilość razy Przykład wprowadzenia 80 znaków =</description>
    </item>
    
    <item>
      <title>Sprawdzanie pisowni w edytorze Vim</title>
      <link>https://mohdur.github.io/post/sprawdzanie-pisowni-w-edytorze-vim/</link>
      <pubDate>Sat, 24 Oct 2020 19:36:39 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/sprawdzanie-pisowni-w-edytorze-vim/</guid>
      <description>Ustawienie języka
1:set spell spellang=pl Włączenie sprawdzania pisowni
1:set spell Zmapowanie sprawdzania pisowni pod klawiszem F7
1set spell spellang=pl 2nnore &amp;lt;F7&amp;gt; :setlocal spell! spell?&amp;lt;CR&amp;gt; Klawiszologia
 ]s – szuka kolejnego wystąpienia nieznanego słowa [s – szuka poprzedniego wystąpienia nieznanego słowa ]S - szuka kolejnego wystąpienia definitywnie źle napisanego słowa [S – szuka poprzedniego wystąpienia słowa definitywnie źle napisanego słowa z= - podaje sugestie zastąpienia słowa zg - dodaje słowo pod kursorem do lokalnego słownika  Więcej informacji w pomocy :help spell</description>
    </item>
    
    <item>
      <title>Przydatne programy dla systemu Linux</title>
      <link>https://mohdur.github.io/post/przydatne-programy-dla-systemu-linux.md/</link>
      <pubDate>Sat, 24 Oct 2020 19:31:54 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/przydatne-programy-dla-systemu-linux.md/</guid>
      <description>Tworzenie dokumentacji  ronn - generowanie dokumentów man pandoc - konwertowanie dokumentów między innymi z formatu Markdown mdv - przeglądarka plików Markdown mdtohtml - konwertowanie dokumentów Markdown do HTML w języku Go  Wyszukiwanie i przeszukiwanie plików  fd - alternatywa dla polecenia find, (dnf install fd-find) the silver searcher - ag - alternatywa dla programu grep, (dnf install the_silver_searcher) fzf - fzf is a general-purpose command-line fuzzy finder ripgrep - rg - kolejny program zastępujący grep  Backup  minio - system przechowywania plików kompatybilny z AWS S3 restic - tworzenie backupów rclone - tworzenie backupów duplicity - tworzenie szyfrowanych backupów duply - front end to duplicity  Inne  HTTPie - klient HTTP bat - cat z kolorowaniem składni (dnf install bat)  Programy używane z i3wm / bspwm na stacji roboczej  arandr aspell-pl autossh bcyrpt blueman clipmenu https://github.</description>
    </item>
    
    <item>
      <title>Konfiguracja i praca z Tmux</title>
      <link>https://mohdur.github.io/post/konfiguracja-i-praca-z-tmux/</link>
      <pubDate>Sat, 24 Oct 2020 19:30:00 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konfiguracja-i-praca-z-tmux/</guid>
      <description>Podstawowe informacje Tmux posiada trzy obiekty, tj. sesje, okna i panele, sesje są to osobne procesy, czyli każde kolejne uruchomienie programu tmux, które następnie możemy dzielić na okna a te na panele.
Uruchomienie nowej sesji
1$ tmux Więcej na temat tmux https://github.com/tmux/tmux/wiki
Zmiana prefiksu ctrl-b na ctrl-a Tmux jako prefiks czyli skrót do uruchamiania poleceń używa Ctrl+b w odróżnieniu do programu screen, w którym używany jest skrót Ctrl+a. Pierwszą rzeczą jaką robię w konfiguracji tmux to właśnie zamiana Ctrl+b na Ctrl+a.</description>
    </item>
    
    <item>
      <title>Ignorowanie zamknięcia ekranu laptopa</title>
      <link>https://mohdur.github.io/post/ignorowanie-zamkni%C4%99cia-ekranu-laptopa/</link>
      <pubDate>Sat, 24 Oct 2020 19:28:13 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/ignorowanie-zamkni%C4%99cia-ekranu-laptopa/</guid>
      <description>Standardowo przy zamknięciu klapy laptopa system przechodzi w stan uśpienia.
Żeby zapobiec uśpienia systemu należy w pliku /etc/systemd/logind.conf odnaleść wpis: #HandleLidSwitch=suspend i usunąć znak #, następnie zmienić słowo suspend na ignore
Tak powinien wyglądać prawidłowy wpis w pliku /etc/systemd/logind.conf
1HandleLidSwitch=ignore Teraz pozostało zrestartować usługę systemd-logind, restart usługi spowoduje zamknięcie wszystkich programów i wylogowanie się z bieżącej sesji.
1sudo systemctl restart systemd-logind Z uwagi na to że modyfikacji zachowania systemu, wiąże się z każdorazowym zamknięciem bieżącej sesji, nie jest to idealne rozwiązanie.</description>
    </item>
    
    <item>
      <title>Easy RSA i OpenVPN 2.4</title>
      <link>https://mohdur.github.io/post/easy-rsa-openvpn-2-4/</link>
      <pubDate>Sat, 24 Oct 2020 19:25:13 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/easy-rsa-openvpn-2-4/</guid>
      <description>Easy RSA 3 jest ciutkę inne od jego poprzednich wersji, powinieneś to przejść bez większych problemów.
Zaczynamy od pobrania ostatniej wersji https://github.com/OpenVPN/easy-rsa/releases
1# cd /etc/openvpn 2# tar zxvf EASY_RSA.tar.gz 3# cd Easy_RSA Skrypt tworzący CA Pierwszy skrypt 01_init tworzy CA
1#!/bin/bash 2 3if [ $# -ne 1 ]; then 4 echo Podaj jako parametr nazwę certyfikatu dla serwera np. nazwę DNS lub adres IP. 5 exit 6fi 7 8echo Inicjuje PKI 9.</description>
    </item>
    
    <item>
      <title>Vim szyfrowanie</title>
      <link>https://mohdur.github.io/post/vim-szyfrowanie/</link>
      <pubDate>Sat, 24 Oct 2020 19:20:49 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-szyfrowanie/</guid>
      <description>Vim posiada wbudowany mechanizm szyfrowania, do niedawna Vim potrafił szyfrować wyłącznie metodą zip, nowsze wersje potrafią szyfrować algorytmem blowfish a od wersji 7.4.399 ma możliwość szyfrowania metodą blowfish2, która jest najtrudniejszą do złamania. Nie zaleca się używania szyfrowania za pomocą metody zip. Szyfrowanie tą metodą nie jest możliwe w edytorze Neovim.
W celu lepszego zabezpieczenia możemy użyć dodatkowo następujących komend
1:set viminfo= 2:set noswapfile noundofile nobackup 3:edit tajny_plik.txt Żeby sprawdzić aktualną metodę szyfrowania należy wydać polecenie</description>
    </item>
    
    <item>
      <title>Vim uzycie Ctrl-s do zapisania pliku</title>
      <link>https://mohdur.github.io/post/vim-uzycie-ctrl-s-do-zapisania-pliku/</link>
      <pubDate>Sat, 24 Oct 2020 19:19:42 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-uzycie-ctrl-s-do-zapisania-pliku/</guid>
      <description>W systemie linux standardowo skrót Ctrl-s zatrzymuje wyświetlanie na ekranie terminala, Ctrl-q pozwala na dalsze wyświetlanie.
Dlatego należy wyłączyć ten skrót, w pliku .bashrc lub w przypadku powłoki ZSH .zshrc dodajemy:
1stty -ixon Teraz należy przeładować konfigurację powłoki&amp;quot;
1$ source ~/.bashrc Teraz kolej na ustawienie edytora Vim, w pliku .vimrc dodajemy:
1nnoremap &amp;lt;C-s&amp;gt; &amp;lt;Esc&amp;gt;:w&amp;lt;CR&amp;gt; 2imap &amp;lt;C-s&amp;gt; &amp;lt;ESC&amp;gt;:w&amp;lt;CR&amp;gt; </description>
    </item>
    
    <item>
      <title>Vim szyfrowanie za pomocą PGP</title>
      <link>https://mohdur.github.io/post/vim-szyfrowanie-za-pomoc%C4%85-pgp.md/</link>
      <pubDate>Sat, 24 Oct 2020 19:17:24 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-szyfrowanie-za-pomoc%C4%85-pgp.md/</guid>
      <description>Szyfrowanie wybranej linii Tutaj zaszyfrujemy tekst z linii 117 za pomocą gpg i hasła tajnehaslo
1Tekst niezaszyfrowany w linii 117 1:117 ! gpg -q -a -c - 2-----BEGIN PGP MESSAGE----- 3 4jA0EBwMC8MJMzMCMn+Lp0lcBi6dx1AYRx9OE/xXZSHWTpbi2Zy9Rt5AVw2IIjyYS 5n3hobFW418P8IDXL0swMT7ljaZBFujd/axC18CaGXixXfBgosIW4QcVoVhyOublG 62r4YGqJ0Ip8= 7=Dlnx 8-----END PGP MESSAGE----- Odszyfrowanie Spróbujmy to odszyfrować, tekst odszyfrowany pojawi się w miejscu zaszyfrowanego.
1:121,127 ! gpg -q -d - 2gpg: dane zaszyfrowano za pomocą AES 3gpg: zaszyfrowane jednym hasłem 4Tekst niezaszyfrowany w linii 117 Zaszyfrowanie całego pliku Zaszyfrowanie całego pliku, efektem tego polecenia będzie plik o tej samej nazwie z rozszrzeniem asc</description>
    </item>
    
    <item>
      <title>Vim Różności</title>
      <link>https://mohdur.github.io/post/vim-r%C3%B3%C5%BCno%C5%9Bci/</link>
      <pubDate>Sat, 24 Oct 2020 19:14:34 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-r%C3%B3%C5%BCno%C5%9Bci/</guid>
      <description>Poruszanie się w trybie INSERT 1inoremap &amp;lt;C-h&amp;gt; &amp;lt;Left&amp;gt; &amp;#34; przemieszcza kursor w lewo2inoremap &amp;lt;C-j&amp;gt; &amp;lt;Down&amp;gt; &amp;#34; przemieszcza kursor w dół3inoremap &amp;lt;C-k&amp;gt; &amp;lt;Up&amp;gt; &amp;#34; przemieszcza kursor w górę4inoremap &amp;lt;C-l&amp;gt; &amp;lt;Right&amp;gt; &amp;#34; przemieszcza kursor w prawoPoruszanie się w trybie COMMAND 1cnoremap &amp;lt;C-h&amp;gt; &amp;lt;Left&amp;gt; &amp;#34; przemieszcza kursor w lewo2cnoremap &amp;lt;C-j&amp;gt; &amp;lt;Down&amp;gt; &amp;#34; przemieszcza kursor w dół3cnoremap &amp;lt;C-k&amp;gt; &amp;lt;Up&amp;gt; &amp;#34; przemieszcza kursor w górę4cnoremap &amp;lt;C-l&amp;gt; &amp;lt;Right&amp;gt; &amp;#34; przemieszcza kursor w prawoZapisanie pliku z użyciem sudo 1cnoremap sudow w !</description>
    </item>
    
    <item>
      <title>Vim Otworzenie Pliku Pod Kursorem</title>
      <link>https://mohdur.github.io/post/vim-otworzenie-pliku-pod-kursorem/</link>
      <pubDate>Sat, 24 Oct 2020 19:12:38 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-otworzenie-pliku-pod-kursorem/</guid>
      <description>Przykład:
1/home/user/.bashrc Najerzdżając kursorem na nazwę pliku wciskamy skrót gf co otworzy plik w nowym buforze.</description>
    </item>
    
    <item>
      <title>Generowanie haseł</title>
      <link>https://mohdur.github.io/post/generowanie-hase%C5%82/</link>
      <pubDate>Sat, 24 Oct 2020 18:08:03 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/generowanie-hase%C5%82/</guid>
      <description>Parametr -S to zarodek (salt), który jest generowany za pomocą polecenia pwgen.
1mkpasswd -m sha-512 -S $(pwgen -n 16 | cut -f 1 -d &amp;#39; &amp;#39;) -s &amp;lt;&amp;lt;&amp;lt; Hasło Wersja z wykorzystaniem urządzenia /dev/urandom
1$ mkpasswd -m sha-512 -S $(&amp;lt; /dev/urandom tr -cd &amp;#34;[:alnum:]&amp;#34; | head -c${1:-16}; echo) -s &amp;lt;&amp;lt;&amp;lt; hasło 2$6$AnSw5avmi6cwpxzG$bnLa8cWs5FhdDU49jzdyxR4Fw0p3MGWcDLzwOd1x564I4iKJFmNwdq3BgkpBo/fSG1YCYbYMD9eE993GpTRQq0 Generowanie hasła za pomocą OpenSSL
1openssl rand -base64 36 23WC8BpncVVQyzdHHWlULV1VzW7LnHs0erGIuCHTZ+Zt9YU/t Użycie dd
1dd if=/dev/urandom bs=10 count=30 | tr -cd &amp;#39;[:alnum:]&amp;#39; 230+0 records in 330+0 records out 4300 bytes (300 B) copied, 0.</description>
    </item>
    
    <item>
      <title>Zablokowania logowania użytkownika root przez SSH</title>
      <link>https://mohdur.github.io/post/zablokowania-logowania-u%C5%BCytkownika-root-przez-ssh/</link>
      <pubDate>Sat, 24 Oct 2020 17:41:40 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zablokowania-logowania-u%C5%BCytkownika-root-przez-ssh/</guid>
      <description>W pliku /etc/ssh/sshd_config należy dodać:
1PermitRootLogin no Dostępne opcje:
 yes prohibit-password forced-commands-only no  Ustawienie parametru prohibit-password wyłącza opcję logowania się za pomocą hasła, natomiast można logować się za pomocą klucza.</description>
    </item>
    
    <item>
      <title>Wykonanie kopii zapasowej usługi Nextcloud</title>
      <link>https://mohdur.github.io/post/wykonanie-kopii-zapasowej-us%C5%82ugi-nextcloud/</link>
      <pubDate>Sat, 24 Oct 2020 17:39:30 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/wykonanie-kopii-zapasowej-us%C5%82ugi-nextcloud/</guid>
      <description>Skrypt do wykonania kopii zapasowej Nextcloud, w celu zwiększenia bezpieczeństwa, hasło do bazy danych jest przechowywane w bazie programu pass.
1tar --exclude=&amp;#39;/var/www/html/nc/data&amp;#39; -czvf nextcloud-$(date -I).tgz /var/www/html/nc 2mysqldump --hex-blob -u nextcloud -p$(pass show nc@mysql) nextcloud &amp;gt; nextcloud-$(date -I).sql 3gzip -9 nextcloud-$(date -I).sql </description>
    </item>
    
    <item>
      <title>Zarządzanie pakietami w Fedora Linux</title>
      <link>https://mohdur.github.io/post/zarz%C4%85dzanie-pakietami-w-fedora-linux/</link>
      <pubDate>Sat, 24 Oct 2020 17:25:28 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zarz%C4%85dzanie-pakietami-w-fedora-linux/</guid>
      <description>Instalacja pakietów 1sudo dnf install &amp;lt;nazwa-pakietu&amp;gt; 1sudo dnf install borgbackup 1Last metadata expiration check: 0:16:01 ago on Mon 25 Mar 2019 02:58:33 PM CET 2Dependencies resolved. 3============================================================================== 4 Package Architecture Version Repository Size 5============================================================================== 6Installing: 7 borgbackup x86_64 1.1.7-2.fc30 rawhide 980 k 8Installing dependencies: 9 python3-llfuse x86_64 1.3.5-2.fc30 rawhide 373 k 10 python3-msgpack x86_64 0.6.1-2.fc30 rawhide 90 k 11 12Transaction Summary 13============================================================================== 14Install 3 Packages 15 16Total download size: 1.4 M 17Installed size: 5.</description>
    </item>
    
    <item>
      <title>Vim okna</title>
      <link>https://mohdur.github.io/post/vim-okna/</link>
      <pubDate>Sat, 24 Oct 2020 17:16:30 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-okna/</guid>
      <description>Skróty :h ^w
1&amp;lt;c-w&amp;gt; o =&amp;gt; :only 2&amp;lt;c-w&amp;gt; c =&amp;gt; :close 3&amp;lt;c-w&amp;gt; &amp;lt;c-w&amp;gt; 4&amp;lt;c-w&amp;gt; h/j/k/l 5&amp;lt;c-w&amp;gt; H/J/K/L 6&amp;lt;c-w&amp;gt; +/- =&amp;gt; :resize +/-N 7&amp;lt;c-w&amp;gt; &amp;lt;/&amp;gt; =&amp;gt; :vertical resize +/-N 8&amp;lt;c-w&amp;gt; =    Skrót Opis     ctrl-w s dzieli okno w poziomie :split   ctrl-w v dzieli okno w pionie :vsplit   ctrl-w h przechodzi do okna po lewo   ctrl-w l przechodzi do okna po prawej   ctrl-w H przenosi aktywne okno na lewo   ctrl-w L przenosi aktywne okno na prawo    </description>
    </item>
    
    <item>
      <title>Generowanie kodu QR dla autoryzacj 2FA</title>
      <link>https://mohdur.github.io/post/generowanie-kodu-qr-dla-autoryzacj-2fa/</link>
      <pubDate>Sat, 24 Oct 2020 17:00:15 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/generowanie-kodu-qr-dla-autoryzacj-2fa/</guid>
      <description>Instalacja pakietu qrencode
1sudo dnf install qrencode Tak wygląda kod QR w postaci linku
1otpauth://totp/mohdur%40github?secret=OAPICAFAI7PJKHVN&amp;amp;issuer=github/mohdur&amp;amp;algorithm=SHA512&amp;amp;digits=6&amp;amp;period=30 Generowanie kodu do pliku PNG
1echo &amp;#34;otpauth://totp/mohdur%40github?secret=OAPICAFAI7PJKHVN&amp;amp;issuer=github/mohdur&amp;amp;algorithm=SHA512&amp;amp;digits=6&amp;amp;period=30&amp;#34; \ 2 | qrencode -t png -d 125 -lH -o qr.png </description>
    </item>
    
    <item>
      <title>Wireshark zdalnie przez SSH</title>
      <link>https://mohdur.github.io/post/wireshark-zdalnie-przez-ssh/</link>
      <pubDate>Sat, 24 Oct 2020 16:51:34 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/wireshark-zdalnie-przez-ssh/</guid>
      <description>Wirshark jest uruchomiony na systemie Linux natomiast odczytuje on dane z systemu OpenBSD
1$ ssh root@192.168.6.66 tcpdump -l -i sis0 -w - &amp;#39;not port 22&amp;#39; | wireshark -k -i - Zapis not port 22 dotyczy polecenia tcpdump, jest to filtr dzięki czemu port 22 nie jest przekazywany do wiresharka.</description>
    </item>
    
    <item>
      <title>Skrypt ułatwiający pracę z pluginem Vimwiki i dziennikiem</title>
      <link>https://mohdur.github.io/post/skrypt-u%C5%82atwiaj%C4%85cy-prac%C4%99-z-pluginem-vimwiki-i-dziennikiem/</link>
      <pubDate>Sat, 24 Oct 2020 16:44:02 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/skrypt-u%C5%82atwiaj%C4%85cy-prac%C4%99-z-pluginem-vimwiki-i-dziennikiem/</guid>
      <description>Skrypt zainspirowany https://github.com/nickjj/notes/blob/master/notes
Wymagania:  ripgrep skim (sk) fzf preview.sh część pluginu fzf.vim https://github.com/junegunn/fzf.vim/blob/master/bin/preview.sh vim plugin Vimwiki xclip  Opis użycia: W przypadku wyszukiwania z użyciem parametrów -s i -f, istnieje skrót Ctrl+p, który uruchamia skrypt preview.sh, służący do podglądania szukanych notatek. Skrypt preview.sh jest częścią pluginu fzf.vim.
1$ notes treść notatki -- dodaje treść notatki z wiersza poleceń 2$ xclip -o | notes -- wkleja zawartość schowka do notatki 3$ notes -- otwiera w edytorze dzisiejszą notatkę 4$ notes -s -- przeszukuje wszystkie notatek w $NOTES_DIRECTORY 5$ notes -f -- wyszukuje plików w $NOTES_DIRECTORY 6$ notes -d -- usuwa dzisiejszy notes 7$ notes -g -- generuje INDEKS dziennika $NOTES_DIARY_INDEX 8$ notes -i -- przechodzi do edycji $NOTES_DIARY_INDEX 1#!</description>
    </item>
    
    <item>
      <title>Skróty klawiszowe ZSH</title>
      <link>https://mohdur.github.io/post/skr%C3%B3ty-klawiszowe-zsh/</link>
      <pubDate>Sat, 24 Oct 2020 16:34:48 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/skr%C3%B3ty-klawiszowe-zsh/</guid>
      <description>   Skrót Opis     Tab Auto complete   ^a Beginning of line   ^e End of line   ^f Forward one character   ^b Back one character   ^h Delete one character (backw­ards)   %f Forward one word   %b Back one word   ^w Delete one word (backw­ards)   ^u Clear to beginning of line   ^k Clear to end of line   ^y Paste from Kill Ring   ^t Swap cursor with previous character   %t Swap cursor with previous word   ^p Previous line in history   ^n Next line in history   ^r Search backwards in history   ^l Clear screen   ^o Execute command but keep line   ^z Suspend process   fg restore process   bg continue process in background   ^c Kill current process   ^d Exit shell    </description>
    </item>
    
    <item>
      <title>Vim podróże w czasie</title>
      <link>https://mohdur.github.io/post/vim-podr%C3%B3%C5%BCe-w-czasie/</link>
      <pubDate>Sat, 24 Oct 2020 16:32:31 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-podr%C3%B3%C5%BCe-w-czasie/</guid>
      <description>Edytor Vim posiada dwie komendy, które umożliwiają przejście do wersji z przed lub kilka sekund później, są to :earlier oraz :later. Jako parametr dodatkowy używamy ile sekund, minut godzin lub nawet dni chcemy się przenieść w czasie. Dodatkowo możemy przenieść się w czasie N zapisów pliku w czasie.
Użycie tych dwóch poleceń bez podania w dodatkowym parametrze jednostki czasu przenosi nas o kilka stanów pliku. Stan można uważać za przejście pomiędzy trybami edycji.</description>
    </item>
    
    <item>
      <title>Polska klawiatura i polonizacja w Arch Linux</title>
      <link>https://mohdur.github.io/post/polska-klawiatura-i-polonizacja-w-arch-linux/</link>
      <pubDate>Sat, 24 Oct 2020 16:28:26 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/polska-klawiatura-i-polonizacja-w-arch-linux/</guid>
      <description>Polska klawiatura Do pliku /etc/X11/xorg.conf.d/keyboard.conf dodajemy:
1Section &amp;#34;InputClass&amp;#34; 2 Identifier &amp;#34;Keyboard Defaults&amp;#34; 3 MatchIsKeyboard &amp;#34;yes&amp;#34; 4 Option &amp;#34;XkbLayout&amp;#34; &amp;#34;pl&amp;#34; 5EndSection Polonizacja systemu w pliku /etc/locale.conf dodajemy
1LANG=pl_PL.UTF-8 W pliku /etc/locale.gen dodajemy
1pl_PL.UTF-8 UTF-8 Na koniec wydajemy polecenie
1# locale-gen </description>
    </item>
    
    <item>
      <title>Generowanie klucza GnuPG / PGP</title>
      <link>https://mohdur.github.io/post/generowanie-klucza-gnupg-pgp/</link>
      <pubDate>Sat, 24 Oct 2020 15:52:11 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/generowanie-klucza-gnupg-pgp/</guid>
      <description>Generowanie klucza PPG za pomocą komendy gpg lub gpg2, gpg --key-gen standardowa skrócona procedura, lepszą opcją jest wygenerowanie klucza za pomoca parametru --full-generate-key
Pierwsza cześć to pytania o parametry klucza
1gpg2 --full-generate-key 2gpg (GnuPG) 2.2.13; Copyright (C) 2019 Free Software Foundation, Inc. 3This is free software: you are free to change and redistribute it. 4There is NO WARRANTY, to the extent permitted by law. 5 6gpg: katalog ,,/home/testowy/.gnupg&amp;#39;&amp;#39; utworzony 7gpg: keybox ,,/home/testowy/.</description>
    </item>
    
    <item>
      <title>Konwertowanie Dokumentów Markdown Do PDF</title>
      <link>https://mohdur.github.io/post/konwertowanie-dokument%C3%B3w-markdown-do-pdf/</link>
      <pubDate>Sat, 24 Oct 2020 15:50:31 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konwertowanie-dokument%C3%B3w-markdown-do-pdf/</guid>
      <description>Skrypt do konwertowania dokumentów
1#!/bin/bash 2 3nazwa=$(basename &amp;#34;$1&amp;#34; .md) 4 5pandoc -V geometry:margin=1.5cm &amp;#34;$1&amp;#34; --pdf-engine=xelatex \ 6--variable fontsize=10.5pt -s -o &amp;#34;$nazwa&amp;#34;.pdf --toc --toc-depth 2 </description>
    </item>
    
    <item>
      <title>Arch różności</title>
      <link>https://mohdur.github.io/post/arch-r%C3%B3%C5%BCno%C5%9Bci/</link>
      <pubDate>Sat, 24 Oct 2020 15:39:57 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/arch-r%C3%B3%C5%BCno%C5%9Bci/</guid>
      <description>Aktualizacja menu grub 1# grub-mkconfig -o /boot/grub/grub/cfg Instalacja QT4 1# pacman -S qt4 Sprawdzenie zależności pakietu i informacji 1# pacman -Qi vlc Lista uruchomionych usług 1$ systemctl list-unit-files | grep enabled 2autovt@.service enabled 3cronie.service enabled 4dbus-org.freedesktop.NetworkManager.service enabled 5dbus-org.freedesktop.nm-dispatcher.service enabled 6display-manager.service enabled 7getty@.service enabled 8lightdm.service enabled 9NetworkManager-dispatcher.service enabled 10NetworkManager.service enabled 11sshd.service enabled 12systemd-fsck-root.service enabled-runtime 13remote-fs.target enabled 14pamac-cleancache.timer enabled Znalezienie rozdzielczości ekranu Należy zainstalować pakiet xorg-xrandr
1# xrandr Wyświetlenie tablicy ARP 1# ip neigh lub</description>
    </item>
    
    <item>
      <title>Praca z klientem OpenSSH</title>
      <link>https://mohdur.github.io/post/praca-z-klientem-openssh/</link>
      <pubDate>Sat, 24 Oct 2020 15:22:01 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/praca-z-klientem-openssh/</guid>
      <description>Nawiązanie połączenia ze zdalnym hostem 1ssh user@nazwa_serwera Autoryzacja za pomocą klucza Dwiema podstawowymi metodami autoryzacji do serwera SSH jest hasło oraz klucz prywatny. Dzięki pary kluczy to znaczy klucza prywatnego oraz klucza publicznego można zwiększyć bezpieczeństwo serwera SSH. Klucz publiczny można udostępniać publicznie i nie stanowi to zagrożenia, natomiast klucz prywatny należy zabezpieczyć dobrym hasłem i przechowywać go zdala od ciekawskich.
Generowanie pary kluczy 1ssh-keygen 1usage: ssh-keygen [-q] [-b bits] [-t dsa | ecdsa | ed25519 | rsa] 2 [-N new_passphrase] [-C comment] [-f output_keyfile] 3 ssh-keygen -p [-P old_passphrase] [-N new_passphrase] [-f keyfile] 4 ssh-keygen -i [-m key_format] [-f input_keyfile] 5 ssh-keygen -e [-m key_format] [-f input_keyfile] 6 ssh-keygen -y [-f input_keyfile] 7 ssh-keygen -c [-P passphrase] [-C comment] [-f keyfile] 8 ssh-keygen -l [-v] [-E fingerprint_hash] [-f input_keyfile] 9 ssh-keygen -B [-f input_keyfile] 10 ssh-keygen -D pkcs11 11 ssh-keygen -F hostname [-f known_hosts_file] [-l] 12 ssh-keygen -H [-f known_hosts_file] 13 ssh-keygen -R hostname [-f known_hosts_file] 14 ssh-keygen -r hostname [-f input_keyfile] [-g] 15 ssh-keygen -G output_file [-v] [-b bits] [-M memory] [-S start_point] 16 ssh-keygen -T output_file -f input_file [-v] [-a rounds] [-J num_lines] 17 [-j start_line] [-K checkpt] [-W generator] 18 ssh-keygen -s ca_key -I certificate_identity [-h] [-U] 19 [-D pkcs11_provider] [-n principals] [-O option] 20 [-V validity_interval] [-z serial_number] file .</description>
    </item>
    
    <item>
      <title>Komenda if w skryptach BASH</title>
      <link>https://mohdur.github.io/post/komenda-if-w-skryptach-bash.md/</link>
      <pubDate>Sat, 24 Oct 2020 15:16:13 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/komenda-if-w-skryptach-bash.md/</guid>
      <description>Porówanie Opis     &amp;lt;INTEGER1&amp;gt; -eq &amp;lt;INTEGER2&amp;gt; Prawda jeśli liczby są równe.   &amp;lt;INTEGER1&amp;gt; -ne &amp;lt;INTEGER2&amp;gt; Prawda jeśli liczby nie są równe.   &amp;lt;INTEGER1&amp;gt; -le &amp;lt;INTEGER2&amp;gt; Prawda jeśli pierwsza liczba jest mniejsza lub równa od drugiej.   &amp;lt;INTEGER1&amp;gt; -ge &amp;lt;INTEGER2&amp;gt; Prawda jeśli pierwsza liczba jest większa lub równa od drugiej.   &amp;lt;INTEGER1&amp;gt; -lt &amp;lt;INTEGER2&amp;gt; Prawda jeśli pierwsza liczba jest mniejsza od drugiej.</description>
    </item>
    
    <item>
      <title>Backup danych na szyfrowanym nośniku</title>
      <link>https://mohdur.github.io/post/backup-danych-na-szyfrowanym-nosniku.md/</link>
      <pubDate>Sat, 24 Oct 2020 14:33:48 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/backup-danych-na-szyfrowanym-nosniku.md/</guid>
      <description>Skrypt wykonujący kopię zapasową na szyfrowanym nośniku Skrypt wykonuje kopię zapasową wybranych katalogów z pominięciem katalogów zawartych w pliku /home/user/bin/backup2sd.exclude który jest ustawiony w zmiennej ExcludeFile, każdy katalog znajduje się w oddzielnej linii.
Przykładowy plik /home/user/bin/backup2sd.exclude
1.Private 2.PyCharmCE2017.3 3.cmake 4.cache 5.dbus 6.ecryptfs 7.gimp-2.8 Parametry wywołania skryptu
 -m - podmontowanie nośnika -u - odmontowanie nośnika -b - wykonanie kopii zapasowej -h - wyświetlenie pomocy  Wywołanie skryptu bez parametrów uruchamia wykonanie kopii zapasowej.</description>
    </item>
    
    <item>
      <title>Vim włączenie pluginu dla wybranych typów plików</title>
      <link>https://mohdur.github.io/post/vim-wlaczenie-pluginu-dla-wybranych-typow-plikow/</link>
      <pubDate>Sat, 24 Oct 2020 14:28:33 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-wlaczenie-pluginu-dla-wybranych-typow-plikow/</guid>
      <description>Dla menadżera pluginów Plug składnia wyląda w ten sposób
1Plug &amp;#39;davidhalter/jedi-vim&amp;#39;, { &amp;#39;for&amp;#39;: &amp;#39;python&amp;#39; }Możemy też uruchomiać plugin dla wielu typów plików
1Plug &amp;#39;kovisoft/paredit&amp;#39;, { &amp;#39;for&amp;#39;: [&amp;#39;clojure&amp;#39;, &amp;#39;scheme&amp;#39;] }Menadżer pluginów Plug jest dostępny na stronie https://github.com/junegunn/vim-plug</description>
    </item>
    
    <item>
      <title>Vim kompilacja ze źrodeł</title>
      <link>https://mohdur.github.io/post/vim-kompilacja-ze-zrodel/</link>
      <pubDate>Sat, 24 Oct 2020 14:23:52 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-kompilacja-ze-zrodel/</guid>
      <description>Pobranie aktualnej wersji z repozytorium git
1$ git clone https://github.com/vim/vim Skrypt do kompilacji.
1#!/bin/env bash 2 3git pull 4 5make distclean 6 7./configure --prefix=/usr/local \ 8 --enable-python3interp=&amp;#39;dynamic&amp;#39; \ 9 --with-python3-command=&amp;#39;python3&amp;#39; \ 10 --with-x \ 11 --enable-gui=gtk3 \ 12 --enable-fontset \ 13 --enable-xim \ 14 --enable-gpm \ 15 --enable-acl \ 16 --enable-multibyte \ 17 --with-features=huge \ 18 --enable-cscope \ 19 --enable-luainterp=&amp;#39;dynamic&amp;#39; \ 20 --with-compiledby=&amp;#39;MOHDUR&amp;#39; | tee kompiluj.log 21 22# echo 23# read -p &amp;#34;Naciśnij [ENTER]&amp;#34; 24 25make 26sudo make install 27 28which ntfy &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 29if [ &amp;#34;$?</description>
    </item>
    
    <item>
      <title>Zmiana funkcjonalności przez zmianę nazwy skryptu</title>
      <link>https://mohdur.github.io/post/zmiana-funkcjonalno%C5%9Bci-przez-zmian%C4%99-nazwy-skryptu/</link>
      <pubDate>Sat, 24 Oct 2020 13:48:25 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zmiana-funkcjonalno%C5%9Bci-przez-zmian%C4%99-nazwy-skryptu/</guid>
      <description>Utworzymy skrypt o nazwie funkcje, jeśli uruchomimy skypt nic się nie stanie, ale tworząc link symboliczny o nazwie new lub delete zostaną wykonane odpowiednio funkcje nowy i delete.
Skrypt zawiera instrukcję case, która operuje na nazwie skryptu za pomocą polecenia $(basename $0) gdzie $0 to nazwa skryptu, polecenie basename usuwa ./ z nazwy skryptu.
Konstrukcja $(basename $0) jest opcjonalna, oznacza to, że jeśli skrypt znajduje się w ścieżce $PATH i można go wykonać wpisując jego nazwę beż podania ścieżki to możemy użyć case &amp;quot;$0&amp;quot; in</description>
    </item>
    
    <item>
      <title>Vim obiekty tekstowe</title>
      <link>https://mohdur.github.io/post/vim-obiekty-tekstowe/</link>
      <pubDate>Sat, 24 Oct 2020 13:46:08 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-obiekty-tekstowe/</guid>
      <description>Obiekt tekstowy to blok tekstu, obiektem może być wyraz, paragraf czy tekst pomiędzy nawiasami. Więcej na temat obiektów tekstowych w pomocy
 http://vimdoc.sourceforge.net/htmldoc/motion.html#text-objects http://vimdoc.sourceforge.net/htmldoc/motion.html#operator  Obiekty tekstowe działają również w trybie VISUAL
Vim pozwala na tworzenie własnych obiektów tekstowych, dzięki czemu jest sporo pluginów rozszerzających te wbudowane. Pluginem rozszerzającym obiekty tekstowe jest np. plugin Target - https://github.com/wellle/targets.vim
Wbudowane obiekty tekstowe
1w - wyraz 2W - wyraz, który nie jest oddzielony spacją np.</description>
    </item>
    
    <item>
      <title>Vim działania arytmetyczne</title>
      <link>https://mohdur.github.io/post/vim-dzia%C5%82ania-arytmetyczne/</link>
      <pubDate>Sat, 24 Oct 2020 13:41:24 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-dzia%C5%82ania-arytmetyczne/</guid>
      <description>Zwiększanie, zmniejszanie liczby W trybie NORMAL przechodzimy kursorem na liczbę następnie
   skrót opis     Ctrl-a zwiększa o 1   Ctrl-x zmniejsza o 1    Działania matematyczne w trybie komend W trybie COMMAND uruchamiamy sekwencje Ctrl-r + = następnie wprowadzamy działanie np. 2+2
1:Ctrl-r = 2+2 2:4 Wstawienie wyniku działania matematycznego 1:put =(2+2)*2 Wstawienie zakresu liczb w kolumnie 1:put =range(11,15) wynikiem będzie lista liczb od 11 do 15</description>
    </item>
    
    <item>
      <title>Skrypty BASH receptury</title>
      <link>https://mohdur.github.io/post/skrypty-bash-receptury/</link>
      <pubDate>Sat, 24 Oct 2020 13:20:08 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/skrypty-bash-receptury/</guid>
      <description>Sprawdzenie daty ostatniej modyfikaji pliku 1$ date -r nazwa_pliku.txt 2Fri 19 Apr 2019 08:41:11 AM CEST Do wyświetlenia możemy użyć standardowego formatowania polecenia data.
1$ date -r nazwa_pliku.txt &amp;#34;+%F %s&amp;#34; 22019-04-19 1555656071 Działania arytmetyczne na datach 1date_-d_&amp;#34;09/27/2019_08:53:52_AM_CEST_+2_days_+2_hours&amp;#34;_&amp;#34;+%F_%T&amp;#34; 1date_-d_&amp;#34;Tue_22_Oct_2019_08:53:52_AM_CEST_+2_days_+2_hours&amp;#34;_&amp;#34;+%F_%T&amp;#34; Argumenty wywołania skryptu    Identyfikator wywołania Opis     $0 Nazwa skryptu   $1, $2, ... Kolejne argumenty przekazane do skryptu   $# Liczba argumentów przekazanych do skryptu   $@, $* Wszystkie argumenty przekazane do skryptu    Przykłady:</description>
    </item>
    
    <item>
      <title>Polecenie grep w przykładach</title>
      <link>https://mohdur.github.io/post/polecenie-grep-w-przyk%C5%82adach/</link>
      <pubDate>Sat, 24 Oct 2020 13:17:22 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/polecenie-grep-w-przyk%C5%82adach/</guid>
      <description>Wyszukanie wszystkich pakietów zawierających słowa vim i common
1dnf search vim | grep -wE &amp;#34;vim|common&amp;#34; Wyszukanie wszystkich pakietów zawierających słowa vim i common, ale pokaże również pakiety, którchy częścią nazwy jest słowo vim lub common np. neovim.
1dnf search vim | grep -E &amp;#34;vim|common&amp;#34; </description>
    </item>
    
    <item>
      <title>Polecenie find w przykładach</title>
      <link>https://mohdur.github.io/post/polecenie-find-w-przyk%C5%82adach/</link>
      <pubDate>Sat, 24 Oct 2020 13:15:07 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/polecenie-find-w-przyk%C5%82adach/</guid>
      <description>Wyszukiwanie ostatnio modyfikowanych plików z wyłączeniem niektórch katalogów.
1find $HOME -type f -mtime -1 -not -path &amp;#39;*.cache*&amp;#39; -not -path &amp;#39;*.git/*&amp;#39; -not -path &amp;#39;*.mozilla*&amp;#39; Wyszukuje wszystkich plików z rozszerzeniem .py a w nich słowa wyraz.
1find . -name \*.py -exec grep -H wyraz &amp;#39;{}&amp;#39; \; Zmiana uprawnień na 775 (rwx-rwx-r-x) wszystkich podkatalogów w bieżącej lokalizacji
1find $PWD -type d -exec chmod 775 {} \; Zmiana uprawnień na 0644 (rw-r--r--) we wszystkich plikach znajduących się w bieżącej lokalizacji łącznie z podkatalogami.</description>
    </item>
    
    <item>
      <title>Podłączenie dysku po identyfikatorze UUID</title>
      <link>https://mohdur.github.io/post/pod%C5%82%C4%85czenie-dysku-po-identyfikatorze-uuid/</link>
      <pubDate>Sat, 24 Oct 2020 13:12:32 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/pod%C5%82%C4%85czenie-dysku-po-identyfikatorze-uuid/</guid>
      <description>Skrypt montujący dysk po identyfikatorze UUID.
Uzyskanie identyfikatora UUID dysku /dev/sdb1
1# blkid /dev/sdb1 2/dev/sdb1: UUID=&amp;#34;359d90df-f17a-42f6-ab13-df13bf356de7&amp;#34; TYPE=&amp;#34;ext4&amp;#34; PARTUUID=&amp;#34;2a01&amp;#34; 1#!/bin/bash 2 3# przykładowy wpis w /etc/fstab 4# echo &amp;#34;UUID=359d90df-f17a-42f6-ab13-df13bf356de7 /disk2 ext4 errors=remount-ro 0 1&amp;#34; &amp;gt;&amp;gt; /etc/fstab 5 6BLKID=$(which blkid) 7 8# odświeżenie pamięci podręcznej blkid 9sudo $BLKID -g 10 11UUID=db979ede-d90f-4207-ac3e-e9efbe76f052 12 13DEVICE=$($BLKID -U $UUID) # nazwa urządzenia np. /dev/sda1 14 15montowanie() 16{ 17	mount | grep $DEVICE &amp;gt; /dev/null 18	if [ $?</description>
    </item>
    
    <item>
      <title>Podręcznik systemowy man</title>
      <link>https://mohdur.github.io/post/podr%C4%99cznik-systemowy-man/</link>
      <pubDate>Fri, 23 Oct 2020 01:30:07 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/podr%C4%99cznik-systemowy-man/</guid>
      <description>Wywołanie polecenia man Składnia:man sekcja temat
Wyświetlenie pomocy dla pliku passwd
1man 5 passwd Wyświetlenie pomocy dla polecenia passwd
1man 1 passwd Sekcje podręcznika man    sekcja opis     1 Polecenia i aplikacje uruchamiane z poziomu użytkownika   2 Wywołania systemowe i kody blędów jądra   3 Wywołania biblioteczne   4 Sterowniki urządzeń i protokoły sieciowe   5 Standardowe formaty plików   6 Gry i programy demonstracyjne   7 Różne pliki i dokumenty   8 Polecenia służące do administrowania systemem   9 Niestandardowe specyfikacje jądra i interfejsów    Przeszukiwanie stron man 1$ man -k słowo_kluczowe Ścieżki przeszukiwania podręcznika systemowego 1$ manpath 2/usr/local/share/man:/usr/share/man:/home/user/src/fzf/man Dodatkowa ścieżka podręcznika man</description>
    </item>
    
    <item>
      <title>Dodanie konta w systemie Linux - skrypt</title>
      <link>https://mohdur.github.io/post/dodanie-konta-w-systemie-linux-skrypt/</link>
      <pubDate>Fri, 23 Oct 2020 01:24:53 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/dodanie-konta-w-systemie-linux-skrypt/</guid>
      <description>Skrypt dodaje konto systemowe, oraz grupę o tej samej nazwie.
1#!/bin/bash 2 3USERNAME=test1 4PASSWORD_PLAIN=test1 5PASSWORD=$(mkpasswd -m sha-512 -S $(&amp;lt; /dev/urandom tr -cd &amp;#34;[:alnum:]&amp;#34; | head -c${1:-16}; echo) -s &amp;lt;&amp;lt;&amp;lt; $PASSWORD_PLAIN) 6groupadd $USERNAME 7adduser -g $USERNAME -G wheel -m -p $PASSWORD $USERNAME Jeśli zamiast zmiennej $PASSWORD chcemy użyć gotowego hasła, należ je wstawić pomiędzy znaki &#39;&#39;
1adduser -g $USERNAME -G wheel -m -p &amp;#39;$6$GhEEpQeaVnyBOWBL$0dGXEuOYInNclLQ1gQ5SxyKJmQM7UHPDupqK8FDykgqt8AnA2CYL.HlhdJpEHxScflX/0E8iWZI0Qv.61N0si0&amp;#39; $USERNAME </description>
    </item>
    
    <item>
      <title>Vim wstawienie makietki</title>
      <link>https://mohdur.github.io/post/vim-wstawienie-makietki/</link>
      <pubDate>Thu, 22 Oct 2020 23:50:24 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-wstawienie-makietki/</guid>
      <description>Funkcja do działania wymaga pluginu fzf.vim https://github.com/junegunn/fzf.vim
Instalacja za pomocą menadżera vim-plug https://github.com/junegunn/vim-plug
1Plug &amp;#39;junegunn/fzf&amp;#39;, { &amp;#39;do&amp;#39;: { -&amp;gt; fzf#install() } }2Plug &amp;#39;junegunn/fzf.vim&amp;#39;Katalog z makietkami ustawiamy w zmiennej g:templates_dir
W funkcji s:read_template_into_buffer(template) możemy wprowadzić jedną modyfikację, jako, że makietek używa się do wstawienia typowej zawartości nagłówka pliku, to funkcja wstawia makietkę na początku pliku, za to odpowiedzialna jest linia (4) execute &#39;0r &#39;.g:templates_dir.&#39;/&#39;.a:template, zmieniając w niej 0r na .r, makietka będzie wstawiana w bieżącej linii zamiast na początku pliku.</description>
    </item>
    
    <item>
      <title>Vim lista projektów i FZF</title>
      <link>https://mohdur.github.io/post/vim-lista-projekt%C3%B3w-i-fzf/</link>
      <pubDate>Thu, 22 Oct 2020 23:37:27 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-lista-projekt%C3%B3w-i-fzf/</guid>
      <description>Funkcja do działania wymaga pluginu fzf.vim https://github.com/junegunn/fzf.vim
Instalacja za pomocą menadżera vim-plug https://github.com/junegunn/vim-plug
1Plug &amp;#39;junegunn/fzf&amp;#39;, { &amp;#39;do&amp;#39;: { -&amp;gt; fzf#install() } }2Plug &amp;#39;junegunn/fzf.vim&amp;#39;Dodajemy nową komendę FZFProj, która przeszukuje listę g:proj.
1let g:proj = [&amp;#39;~/git/&amp;#39;,2 \ &amp;#39;~/git/github&amp;#39;,3 \ &amp;#39;~/src&amp;#39;]45command! FZFProj call fzf#run({6 \ &amp;#39;source&amp;#39;: g:proj,7 \ &amp;#39;sink&amp;#39;: &amp;#39;e&amp;#39;,8 \ &amp;#39;options&amp;#39;: &amp;#39;-m -x +s&amp;#39;,9 \ &amp;#39;down&amp;#39;: &amp;#39;20%&amp;#39;})</description>
    </item>
    
    <item>
      <title>Dodanie konta SAMBA</title>
      <link>https://mohdur.github.io/post/dodanie-konta-samba/</link>
      <pubDate>Thu, 22 Oct 2020 16:35:08 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/dodanie-konta-samba/</guid>
      <description>Skrypt dodający konto użytkownika, oraz tworzący katalog domowy
1if [ $# -eq 0 ]; then 2 echo Podaj nazwę konta, które chcesz dodać. 3 echo $0 nazwa_użytkownika 4 exit 5fi 6 7useradd -d /home/samba/$1 -s /sbin/nologin $1 8chmod 0770 /home/samba/$1 9cd /home/samba/$1 10ls -A /home/samba/$1 | xargs rm 11smbpasswd -a $1 </description>
    </item>
    
    <item>
      <title>Kompilacja xurls</title>
      <link>https://mohdur.github.io/post/kompilacja-xurls/</link>
      <pubDate>Thu, 22 Oct 2020 16:32:55 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/kompilacja-xurls/</guid>
      <description>xurls to projekt, dzięki któremu będzie możliwe odnalezienie wszystkich adresów WWW w pliku lub strumieniu.
Źródła możemy pobrać ze strony https://github.com/mvdan/xurls.git następnie przechodzimy do katalogu cmd/xurls i wydajemy polecenie:
1go build -ldflags=&amp;#39;-w -s&amp;#39; Przykład wykorzystania
1cat plik.md | xurls </description>
    </item>
    
    <item>
      <title>Podłączenie do zasobu SAMBA</title>
      <link>https://mohdur.github.io/post/pod%C5%82%C4%85czenie-do-zasobu-samba/</link>
      <pubDate>Thu, 22 Oct 2020 02:15:28 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/pod%C5%82%C4%85czenie-do-zasobu-samba/</guid>
      <description>1sudo mount.cifs //192.168.0.1/share /mnt/share -o user=nazwa-uzytkownika </description>
    </item>
    
    <item>
      <title>Podłączenie się do sieci Wi-Fi</title>
      <link>https://mohdur.github.io/post/pod%C5%82%C4%85czenie-si%C4%99-do-sieci-wi-fi/</link>
      <pubDate>Thu, 22 Oct 2020 02:13:12 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/pod%C5%82%C4%85czenie-si%C4%99-do-sieci-wi-fi/</guid>
      <description>Wyświetlenie dostępnych sieci Wi-Fi 1sudo nmcli device wifi 1# nmcli radio 2WIFI-HW WIFI WWAN-HW WWAN 3enabled enabled enabled enabled 4# nmcli device 5DEVICE TYPE STATE CONNECTION 6wlan0 wifi disconnected -- 7eth0 ethernet unavailable -- 8lo loopback unmanaged -- 9 10# nmcli device wifi rescan 11# nmcli device wifi list 12# nmcli device wifi connect SSID-Name password wireless-password 13# nmcli -ask device wifi connect SSID-Name </description>
    </item>
    
    <item>
      <title>PF pfctl cheat sheet</title>
      <link>https://mohdur.github.io/post/pf_pfctl_cheat_sheet/</link>
      <pubDate>Thu, 22 Oct 2020 01:53:14 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/pf_pfctl_cheat_sheet/</guid>
      <description>Pobrane z https://gist.github.com/tracphil/4353170 (źródło niedostępne)
1basic pfctl control 2== 3Related: http://www.OpenBSD.org 4Last update: Tue Dec 28, 2004 5== 6Note: 7this document is only provided as a basic overview 8for some common pfctl commands and is by no means 9a replacement for the pfctl and pf manual pages. General PFCTL Commands    Polecenie Opis     pfctl -d disable packet-filtering   pfctl -e enable packet-filtering   pfctl -q run quiet   pfctl -v -v run even more verbose    Loading PF Rules    Polecenie Opis     pfctl -f /etc/pf.</description>
    </item>
    
    <item>
      <title>Konfiguracja interfejsu sieciowego za pomocą polecenia IP w systemie Linux</title>
      <link>https://mohdur.github.io/post/konfiguracja-interfejsu-sieciowego-za-pomoc%C4%85-polecenia-ip-w-systemie-linux/</link>
      <pubDate>Thu, 22 Oct 2020 01:48:33 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konfiguracja-interfejsu-sieciowego-za-pomoc%C4%85-polecenia-ip-w-systemie-linux/</guid>
      <description>Wyświetlenie informacji o interfejsach sieciowych 1ip addr Ustawienie połączenia sieciowego Pierwsze polecenie czyści tablicę routingu dla sieci 192.168.0.0/24 ip route flush default via 192.168.0.0/24
1ip route flush default via 192.168.0.0/24 2ip link set dev enp4s0f2 up 3ip addr add 192.168.0.100/24 dev enp4s0f2 4ip route add 192.168.0.0/24 dev enp4s0f2 5ip route add default via 192.168.0.251 6echo &amp;#34;nameserver 8.8.8.8&amp;#34; &amp;gt; /etc/resolv.conf Wyświetlenie informacji o interfejsie sieciowym 1$ ip a show lo 21: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 3 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 4 inet 127.</description>
    </item>
    
    <item>
      <title>Lokalna kopia zapasowa z wykorzystaniem restic</title>
      <link>https://mohdur.github.io/post/lokalna-kopia-zapasowa-z-wykorzystaniem-restic/</link>
      <pubDate>Thu, 22 Oct 2020 01:39:58 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/lokalna-kopia-zapasowa-z-wykorzystaniem-restic/</guid>
      <description>Restic jest programem do wykonywania kopii zapasowej na lokalnym dysku lub zdalnym zasobie np. Backblaze B2. Kopia zapasowa jest szyfrowana za pomocą klucza z hasłem.
Przygotowanie nowego repozytorium Utworzenie repozytorium w katalogu /opt/restic-repo
1restic init --repo /opt/restic-repo 2 3enter password for new repository: 4enter password again: 5created restic repository 4c5e0dc100 at /opt/restic-repo 6 7Please note that knowledge of your password is required to access 8the repository. Losing your password means that your data is 9irrecoverably lost.</description>
    </item>
    
    <item>
      <title>Ustawienie klawiatury w systemie linux</title>
      <link>https://mohdur.github.io/post/ustawienie-klawiatury-w-systemie-linux/</link>
      <pubDate>Thu, 22 Oct 2020 01:36:57 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/ustawienie-klawiatury-w-systemie-linux/</guid>
      <description>Taka zmiana jest przydatna szczególnie dla osób, które posługują się edytorem Vim lub podobnymi gdzie używa się dość często klawisza ESC, jako że klawisz CapsLock jest bardzo rzadko używany to można go wykorzystać jako klawisz ESC.
1stty -ixon # wyłączenie Ctrl+s 2 3if [ $DISPLAY ]; then 4 setxkbmap -option caps:escape # ustawia caps lock jako ESC 5 xmodmap -e &amp;#34;keycode 62 = Shift_Lock&amp;#34; # ustawia prawy Shift jako Shift Lock 6fi Inne przydatne opcje:</description>
    </item>
    
    <item>
      <title>SED receptury</title>
      <link>https://mohdur.github.io/post/sed-receptury/</link>
      <pubDate>Thu, 22 Oct 2020 01:35:23 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/sed-receptury/</guid>
      <description>Wyświetlanie pierwszej linii pliku 1sed q test.txt Wyświetlenie ostatniej linii pliku 1sed -n &amp;#39;$p&amp;#39; test.txt Wyświetlenie 25 linii pliku 1sed -n &amp;#39;25p&amp;#39; test.txt Wyświetlenie 6 pierwszych linii pliku 1sed &amp;#39;6q&amp;#39; test.txt Wyświetlenie zakresu linii pliku Wyświetla linię z zakresu od 1 do 4 pliku test.txt
1sed -n &amp;#39;1,4&amp;#39; test.txt Wyświetlenie dwóch różnych linii Wyświetlenie 4 i 6 linii pliku
1sed -n &amp;#39;4p;6p&amp;#39; test.txt 24 | 36 lsadfjla Wyświetlenie linii od 3 do ostatniej 1sed -n &amp;#39;3,$p&amp;#39; test.</description>
    </item>
    
    <item>
      <title>Generowanie liczb losowych</title>
      <link>https://mohdur.github.io/post/generowanie-liczb-losowych/</link>
      <pubDate>Thu, 22 Oct 2020 01:31:47 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/generowanie-liczb-losowych/</guid>
      <description>Wygenerowanie liczby losowej o określonej długości W tym wypadku jest to 20 cyfr
1&amp;lt; /dev/urandom | tr -cd &amp;#39;[:digit:]&amp;#39; | head -c20; echo </description>
    </item>
    
    <item>
      <title>Konfiguracja serwera OpenSSH</title>
      <link>https://mohdur.github.io/post/konfiguracja-serwera-openssh/</link>
      <pubDate>Thu, 22 Oct 2020 01:27:57 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konfiguracja-serwera-openssh/</guid>
      <description>Instalacja Instalacja w systemie Fedora
1$ sudo dnf install openssh-server Plik konfiguracyjny Znajduje się w /etc/ssh/sshd_config
Zmiana numeru portu Serwer SSH normalnie nasłuchuje na porcie 22, możemy to zmienić ustawiając parametr Port, parametr Port może występować kilkukrotnie, czyli serwer SSH może nasłuchiwać na wielu portach jednocześnie.
1Port 22 2Port 23034 Możemy użyć parametru ListenAddress, dzięki któremu możemy określić adres IP i port, na którym serwer SSH będzie nasłuchiwał.
1ListenAddress 0.0.0.0:22 2ListenAddress 192.</description>
    </item>
    
    <item>
      <title>Kopia zapasowa Minio &#43; Restic</title>
      <link>https://mohdur.github.io/post/kopia-zapasowa-minio-&#43;-restic/</link>
      <pubDate>Thu, 22 Oct 2020 01:24:15 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/kopia-zapasowa-minio-&#43;-restic/</guid>
      <description>Kopie zapasową możemy przechowywać na serwerze MinIO https://min.io/, jest to serwer służący do przechowywania danych kompatybilny z Amazon S3.
Serwer można uruchomić z pliku binarnego na lokalnymsystemie lub w dockerze.
Uruchomienie serwera Po pobraniu pliku minio tworzymy katalog gdzie będą przechowywane dane:
1mkdir data Uruchomieni serwera
1minio server data 2Endpoint: http://192.168.122.1:9000 http://127.0.0.1:9000 3AccessKey: HWSZL5OL9X37S0DSC3EW 4SecretKey: d5ByBS50pffe90s9bKqWxxse4jBmEp9Zp5sv0c4c 5 6Browser Access: 7 http://192.168.122.1:9000 http://127.0.0.1:9000 8 9Command-line Access: https://docs.min.io/docs/minio-client-quickstart-guide 10 $ mc config host add myminio http://192.</description>
    </item>
    
    <item>
      <title>Kopia zapasowa informacji o repozytoriach Git</title>
      <link>https://mohdur.github.io/post/kopia-zapasowa-informacji-o-repozytoriach-git/</link>
      <pubDate>Thu, 22 Oct 2020 01:22:38 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/kopia-zapasowa-informacji-o-repozytoriach-git/</guid>
      <description>Przygotowałem skrypt, który przeszukuje katalog ~/src i wykonuje kopię zapasową plików kompiluj.sh oraz adres url repozytorium. Całość ląduje w katalogu ~/src/src-repozytoria.
1#!/bin/bash 2 3cd ~/src 4 5test -d src-repozytoria || mkdir src-repozytoria 6 7for dir in $(ls -d */); do 8 cd $dir 9 if [ -f ./kompiluj.sh ]; then 10 test -d ~/src/src-repozytoria/$dir || mkdir ~/src/src-repozytoria/$dir 11 cat ./kompiluj.sh &amp;gt; ~/src/src-repozytoria/$dir/kompiluj.sh 12 fi 13 if [ -f .git/config ]; then 14 test -d ~/src/src-repozytoria/$dir || mkdir ~/src/src-repozytoria/$dir 15 URL=$(grep url .</description>
    </item>
    
    <item>
      <title>Aliasy BASH ZSH</title>
      <link>https://mohdur.github.io/post/aliasy-bash-zsh/</link>
      <pubDate>Thu, 22 Oct 2020 01:20:20 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/aliasy-bash-zsh/</guid>
      <description>Część aliasów ma ustawione parametry dla polecenia np. alias ss=&#39;ss -tumanp&#39; jeśli będziemy chcieli pominąć te parametry należy podać pełną ścieżke do polecenia ss: /usr/sbin/ss.
Ścieżki do katalogów 1[ -d ~/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/bin 2[ -d ~/.local/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/.local/bin 3[ -d ~/.cargo/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/.cargo/bin 4[ -d ~/go/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/go/bin 5[ -d ~/node_modules/.bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/node_modules/.bin Aliasy podstawowe 1alias q=exit 2alias Q=exit 3alias more=less 4alias so=&amp;#39;source&amp;#39; 5alias psgrep=&amp;#39;ps ax | grep &amp;#39; 6alias cp=&amp;#34;cp -i&amp;#34; 7alias df=&amp;#39;df -h&amp;#39; 8alias free=&amp;#39;free -m&amp;#39; 9alias mountt=&amp;#39;mount | column -t&amp;#39; Aliasy narzędzi sieciowych 1alias ip=&amp;#39;sudo ip&amp;#39; 2alias ifconfig=&amp;#39;ip a s&amp;#39; 3alias myip=&amp;#39;ip-br -c a&amp;#39; 4alias arp=&amp;#39;ip n&amp;#39; 5alias iptraf=&amp;#39;sudo iptraf-ng&amp;#39; 6alias ss=&amp;#39;sudo ss -tumanp&amp;#39; 7alias netstat=&amp;#39;sudo netstat&amp;#39; 8alias nmap=&amp;#39;sudo nmap&amp;#39; 9alias lsof=&amp;#39;sudo lsof&amp;#39; Aliasy sudo 1alias cryptsetup=&amp;#39;sudo cryptsetup&amp;#39; 2alias fdisk=&amp;#39;sudo fdisk&amp;#39; 3alias cfdisk=&amp;#39;sudo cfdisk&amp;#39; 4alias mount=&amp;#39;sudo mount&amp;#39; 5alias m=&amp;#39;sudo mount&amp;#39; 6alias umount=&amp;#39;sudo umount&amp;#39; 7alias iotop=&amp;#39;sudo iotop&amp;#39; Aliasy ls 1alias ls=&amp;#39;ls --color=auto&amp;#39; 2alias ll=&amp;#39;ls -alFh&amp;#39; 3alias la=&amp;#39;ls -Ah&amp;#39; 4alias l=&amp;#39;ls -CFh&amp;#39; Katalogi 1alias b=&amp;#34;cd ~/Books&amp;#34; 2alias h=&amp;#34;cd ~&amp;#34; 3alias .</description>
    </item>
    
    <item>
      <title>Aktualizacja Fedora Linux do nowego wydania</title>
      <link>https://mohdur.github.io/post/aktualizacja-fedora-linux-do-nowego-wydania/</link>
      <pubDate>Thu, 22 Oct 2020 01:16:44 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/aktualizacja-fedora-linux-do-nowego-wydania/</guid>
      <description>Aktualizacja do nowego wydania to kilka poleceń, pierwszy etap to pobranie niezbędnych pakietów, po czym wykonujemy restart systemu, podczas którego system zostanie zaktualizowany operacja może potrwać kilkanaście minut do kilkudziesięciu w zależności od konfiguracji sprzętowej oraz liczby pakietów.
UWAGA! Po wykonaniu ostatniego polecenia dnf system-upgrade reboot system będzie przez dłuższy czas niedostępny.
1dnf upgrade --refresh 2dnf install dnf-plugin-system-upgrade 3dnf system-upgrade download --releasever=30 4dnf system-upgrade reboot </description>
    </item>
    
    <item>
      <title>Formatowanie daty i godziny</title>
      <link>https://mohdur.github.io/post/formatowanie-daty-i-godziny/</link>
      <pubDate>Thu, 22 Oct 2020 00:21:03 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/formatowanie-daty-i-godziny/</guid>
      <description>Standardowy wynik polecenia date bez formatowania
1wto, 25 cze 2019, 13:03:54 CEST Formatowanie wyniku polecenia date odbywa się za pomocą parametrów występujących po znaku + np.
1$ date +%F 22019-06-25 Wszystkie znaki formatujące można łączyć a także używać normalnych znaków np. date +%F-%T. Żeby uzyskać znak % należy użyć go dwukrotnie %%.
Przydatne formatowanie    format opis     %F data w formacie 2019-06-25   %T godzina w formacie 13:04:57   %s czas w formacie EPOCH 1561460865    Data    format opis     %a skrócona nazwa dnia tygodnia wto   %A nazwa dnia tygodnia wtorek   %b skrócona nazwa miesiąca cze   %B nazwa miesiąca czerwca   %w 0 - dzień tygodnia 0-6 - 0 to niedziela   %y skrócony rok 19   %Y rok 2019   %m numer miesiąca 06   %d dzień miesiąca 25 od 01-31   %e dzień miesiąca 25 od 1-31    Czas    format opis     %T czas w formacie 13:04:57   %l godzina 1 od 1-12   %I godzina 01 od 01-12   %H godzina 13 od 00-23   %M minuta 26 od 00-59   %S sekunda 47 od 00-60   %p AM/PM PM   %Z strefa czasowa CEST   %j dzień roku 176 od 001-366    </description>
    </item>
    
    <item>
      <title>Archiwizacja plików za pomocą polecenia tar</title>
      <link>https://mohdur.github.io/post/archiwizacja-plik%C3%B3w-za-pomoc%C4%85-polecenia-tar/</link>
      <pubDate>Thu, 22 Oct 2020 00:15:27 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/archiwizacja-plik%C3%B3w-za-pomoc%C4%85-polecenia-tar/</guid>
      <description>Przydatne parametry polecenia tar 1-z - kompresuje gzip 2-j - kompresuje bzip2 3-J - kompresuje xz 4-a - dobiera sposób kompresji po rozszerzeniu pliku 5-f - plik wynikowy 6-x - dekompresuje 7-C - zmienia katalog przed rozpoczęciem archiwizacji Przykłady Tworzy archiwum pandoc.tgz katalogu pandoc 1tar -caf pandoc.tgz pandoc Przechodzi do katalogu pandoc i tworzy archiwum używając kompresji xz 1tar -C pandoc -caf pandoc.txz . Sprawdzenie wielkości archiwum przed i po kompresji 1gzip -l site-hugo.</description>
    </item>
    
    <item>
      <title>Naprawienie SSH Too Many Authentication Failures</title>
      <link>https://mohdur.github.io/post/naprawienie-ssh-too-many-authentication-failures/</link>
      <pubDate>Wed, 21 Oct 2020 22:06:53 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/naprawienie-ssh-too-many-authentication-failures/</guid>
      <description>Jeśli przy łączeniu się przez SSH uzyskamy komunikat o treści &amp;quot;SSH Too Many Authentication Failures&amp;quot;, to jasne jest, że próbująć łączyć się ze zdalnych hostem podaliśmy za dużo razy nieprawidłowe hasło. Taki sam komunikat może pokazać się w sytuacji kiedy do autoryzacji używamy klucza RSA/DSA. Okazuje się, że jeśli posiadamy zbyt dużą ilość kluczy, może okazać się, że otrzymamy taki komunikat, wynika to z tego że każde sprawdzenie klucza jest uznawane za kolejną próbę autoryzacji.</description>
    </item>
    
    <item>
      <title>Uruchomienie skryptu po wykryciu zmian</title>
      <link>https://mohdur.github.io/post/uruchomienie-skryptu-po-wykryciu-zmian/</link>
      <pubDate>Wed, 21 Oct 2020 21:56:55 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/uruchomienie-skryptu-po-wykryciu-zmian/</guid>
      <description>Za pomocą skryptu, który operuje na sumach kontrolnych, można monitorować wybrany plik. Jeśli monitorowany plik się zmieni lub zostanie zapisany, skrypt automatycznie go uruchomi, dzięki temu nie trzeba za każdym razem uruchomiać go podczas kodowania.
Istnieją programy, które wykonują to samo, takie jak entr czy inotifywait, niesety trzeba je doinstalować, o ile nie chcemy używać ich dodatkowych funkcji, można korzystać z tego skryptu.
Jako parametr należy podać nazwę pliku, który chcemy monitorować.</description>
    </item>
    
    <item>
      <title>Zmiana rozdzielczości ekranu</title>
      <link>https://mohdur.github.io/post/zmiana-rozdzielczo%C5%9Bci-ekranu/</link>
      <pubDate>Wed, 21 Oct 2020 21:52:41 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zmiana-rozdzielczo%C5%9Bci-ekranu/</guid>
      <description>Kiedy chcemy zmienić rozdzielczość, ale okazuje się, mimo że w specyfikacji nasz ekran obsługuje taką rozdzielczość to jej nie ma :( Ma to często miejsce przy wirtualizacji. Tak więc musimy taką rozdzielczość dodać do listy.
Sprawdzamy ustawienia dla nowej rozdzielczości za pomocą polecenia gtf
1$ gtf 1920 1080 60 2 3# 1920x1080 @ 60.00 Hz (GTF) hsync: 67.08 kHz; pclk: 172.80 MHz 4Modeline &amp;#34;1920x1080_60.00&amp;#34; 172.80 1920 2040 2248 2576 1080 1081 1084 1118 -HSync +Vsync Dodajemy nową rozdzielczość i ustawiamy ją na ekranie Virtual1</description>
    </item>
    
    <item>
      <title>rsync receptury</title>
      <link>https://mohdur.github.io/post/rsync-receptury/</link>
      <pubDate>Wed, 21 Oct 2020 21:51:21 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/rsync-receptury/</guid>
      <description>Synchronizacja przez SSH 1-e ssh | połączenie przez SSH np. -e &amp;#34;ssh -l ssh-user -p 22&amp;#34; 2-a | zastępuje kilka parametrów -r -l -p -t -g -o -D 3-v | wyświetla bieżącą operację 4-z | włącza kompresję 5--delete-before | kasuje pliki w docelowej lokalizacji jeśli te nie istnieją w źródłowej lokalizacji 6-n | --dry-run - testowa synchronizacja 7-r | synchronizuje podkatalogi 8-l | kopiuje linki symboliczne jako linki symboliczne 9-p | zachowuje uprawnienia 10-t | zachowuje uprawnienia dla grupy 11-o | zachowuje uprawnienia dla użytkownika 12-D | zachowuje pliki urządzeń (tylko root) 1cd ~/Nextcloud 2rsync -avz --delete-before -e ssh Instrukcje/ użytkownik@hostname:/opt/backup-rsync/Instrukcje 1cd ~/Książki 2rsync -avz --delete-before -e ssh .</description>
    </item>
    
    <item>
      <title>Vim praca z powłoką systemową</title>
      <link>https://mohdur.github.io/post/vim-praca-z-pow%C5%82ok%C4%85-systemow%C4%85/</link>
      <pubDate>Wed, 21 Oct 2020 21:22:56 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-praca-z-pow%C5%82ok%C4%85-systemow%C4%85/</guid>
      <description>Edytor Vim potrafi korzystać z powłoki systemowej za pomocą polecenia :r ! czy też !. Polecenie r! pozwala odczytać standardowe wyjście polecenia i wstawić je do bufora. Polecenie ! po prostu wykonuje polecenie systemowe.
Wstawienie wyjścia polecenia systemowego do bufora Polecenie ls -alh, wyświetlające wszystkie pliki w bieżącym katalogu, jednocześnie ustawia cztery kolumny w odpowiedniej kolejności: nazwa, rozmiar, data, godzina.
1:r!ls -alh | awk &amp;#39;{ print &amp;#34; &amp;#34;, $8, &amp;#34; &amp;#34;, $5, &amp;#34; &amp;#34;, $6, &amp;#34; &amp;#34;, $7}&amp;#39; | column -t 2.</description>
    </item>
    
    <item>
      <title>Vim uruchomienie polecenia z bufora</title>
      <link>https://mohdur.github.io/post/vim-uruchomienie-polecenia-z-bufora/</link>
      <pubDate>Wed, 21 Oct 2020 19:11:09 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-uruchomienie-polecenia-z-bufora/</guid>
      <description>Do skopiowania treści z bufora (edytowanego pliku) i wprowadzenie go do linii komend edytora Vim, użyjemy mechanizmu rejestrów, więcej na temat rejestrów można dowiedzieć się z pomocy :help registers. Żeby sprawdzić co mamy w rejestrze możemy użyć polecenia :registers lub :display w skrócie :reg i :dis. Standardowo pod znakiem &amp;quot; jest ostatni wpis. Żeby użyć polecenia z rejestru pod numerem 5 wprowadzamy następującą kombinację klawiszy:
1:Ctrl+r5 Oto przykład użycia polecenia :reg</description>
    </item>
    
    <item>
      <title>Vim wysyłanie bieżącej linii do innego pliku</title>
      <link>https://mohdur.github.io/post/vim-wysy%C5%82anie-bie%C5%BC%C4%85cej-linii-do-innego-pliku/</link>
      <pubDate>Wed, 21 Oct 2020 19:05:40 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-wysy%C5%82anie-bie%C5%BC%C4%85cej-linii-do-innego-pliku/</guid>
      <description>Przy tej operacji użyjemy funkcji writefile oraz getreg, wysłanie bieżącej linii do innego pliku w tym wypadku oznacza usunięcie linii z bieżącego bufora i wklejenie jej do innego pliku.
W tym wypadku zostanie zmapowana kombinacja klawiszy &amp;lt;leader&amp;gt;sv, która wyśle linię do pliku ~/todo/vim.md.
1nnoremap &amp;lt;leader&amp;gt;sv :d&amp;lt;cr&amp;gt;:cd ~/todo/&amp;lt;cr&amp;gt;:call writefile(getreg(&amp;#39;@&amp;#39;, 1, 1), &amp;#39;vim.md&amp;#39;, &amp;#39;a&amp;#39;)&amp;lt;cr&amp;gt;:cd %:p:h&amp;lt;cr&amp;gt; Możemy wysłać kilka linii do innego pliku używając trybu VISUAL (Shift+v), także w tym przypadku jest zmapowana ta sama kombinacja klawiszy &amp;lt;leader&amp;gt;sv.</description>
    </item>
    
    <item>
      <title>NMCLI i OpenVPN</title>
      <link>https://mohdur.github.io/post/nmcli-i-openvpn/</link>
      <pubDate>Wed, 21 Oct 2020 14:43:50 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/nmcli-i-openvpn/</guid>
      <description>Import konfiguracji z pliku 1sudo nmcli connection import type openvpn file nazwa_pliku.ovpn Lista dostępnych połączeń 1nmcli connection show Podłączenie OpenVPN Jeśli klucz OpenVPN jest zabezpieczony hasłem należy dodać parametr --ask
1nmcli connection up nazwa_vpn --ask Export połączenia OpenVPN 1nmcli connection export nazwa_połączenia </description>
    </item>
    
    <item>
      <title>Pobranie ostatniego wydania programu z repozytorium Github</title>
      <link>https://mohdur.github.io/post/pobranie-ostatniego-wydania-programu-z-repozytorium-github/</link>
      <pubDate>Thu, 15 Oct 2020 21:20:19 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/pobranie-ostatniego-wydania-programu-z-repozytorium-github/</guid>
      <description>Pobranie wersji binarnej 1#!/usr/bin/env bash 2 3curl -s https://api.github.com/repos/junegunn/fzf-bin/releases/latest \ 4 | grep browser_download_url \ 5 | grep linux_amd64 \ 6 | cut -d &amp;#39;&amp;#34;&amp;#39; -f 4 \ 7 | wget -O fzf-bin.tgz -qi - 8 9tar xf fzf-bin.tgz 10rm fzf-bin.tgz Pobranie źródeł Pobranie śródeł kiedy są tworzone wydania
1#!/usr/bin/env bash 2 3curl -s https://api.github.com/repos/lotabout/skim/releases/latest \ 4 | grep tarball_url \ 5 | cut -d &amp;#39;&amp;#34;&amp;#39; -f 4 \ 6 | wget -O skim-src.</description>
    </item>
    
    <item>
      <title>Konfiguracja usługi SSH w RouterOS (Mikrotik)</title>
      <link>https://mohdur.github.io/post/konfiguracja-us%C5%82ugi-ssh-w-routeros-mikrotik/</link>
      <pubDate>Wed, 14 Oct 2020 21:01:41 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konfiguracja-us%C5%82ugi-ssh-w-routeros-mikrotik/</guid>
      <description>Ustawienie mocniejszej kryptografi i kluczy dla hosta o większej długości 1/ip ssh set strong-crypto=yes Zmiana długości klucza hosta wymaga wygenerowania ponownie klucza, ta operacja może potrwać do kilkudziesięciu minut w zależności od długości klucza oraz mocy obliczeniowych procesora.
1/ip ssh set host-key-size=4096 2/ip ssh regenerate-host-key Wygenerowanie klucza RSA w systemie Linux 1$ ssh-keygen -t RSA -b 4096 -f mikrotik-rsa Autoryzacja za pomocą klucza RSA i hasła Najpierw należy wygenerować taki klucz, następnie przesłać na urządzenie i dopisać do konkretnego użytkownika.</description>
    </item>
    
    <item>
      <title>Nazwa pliku, wyśwetlanie nazwy i rozszerzenia</title>
      <link>https://mohdur.github.io/post/nazwa-pliku-wy%C5%9Bwetlanie-nazwy-i-rozszerzenia/</link>
      <pubDate>Wed, 14 Oct 2020 15:17:50 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/nazwa-pliku-wy%C5%9Bwetlanie-nazwy-i-rozszerzenia/</guid>
      <description>Nazwa pliku bez ścieżki Na podstawie prostego skryptu pokażę jak wyświetlić nazwę pliku bez katalogu oraz jak wyświetlić samą nazwę pliku bez rozszerzenia.
Pętla for pokazuje wszystkie pliki w katalogu katalog wraz z nazwą tego katalogu np. katalog/nazwa-pliku.txt, chcąc uzyskać samą nazwę pliku użyjemy komendy basename.
1for i in katalog/*.txt 2do 3 PLIK=$(basename $i | cut -d &amp;#39;.&amp;#39; -f 1) 4 echo &amp;#34;$PLIK&amp;#34; 5done Inny przykład użycia komendy basename
1VIMRC_DIR=&amp;#34;$HOME/.vim/vimrc&amp;#34; 2VIMRC=$(basename &amp;#34;$VIMRC_DIR&amp;#34;) 3echo $VIMRC 1vimrc Użycie komendy basename</description>
    </item>
    
    <item>
      <title>Mikrotik i Wireguard VPN</title>
      <link>https://mohdur.github.io/post/mikrotik-i-wireguard-vpn/</link>
      <pubDate>Wed, 14 Oct 2020 14:03:25 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/mikrotik-i-wireguard-vpn/</guid>
      <description>Od kilku tygodni jest dostępna wersja 7.1beta2 (Developmend) systemu RouterOS głównie przeznaczonych dla urządzeń Mikrotik. Od tej wersji istnieje wsparcie dla usługi Wireguard VPN. Należy zaznaczyć iż jest to wersja, której nie należy używać w środowisku produkcyjnym.
Na razie w wersji 7.1beta2 nie ma możliwości zestawienia takiego połączenia za pomocą programu WinBox ani interfejsu WWW. Problem występuje w polu endpoint, które nie przyjmuje numeru portu dla zdalnego hosta. Jedyna możliwość to użyć linii komend.</description>
    </item>
    
    <item>
      <title>Zmiana hasła w kluczu prywatnym RSA (OpenVPN)</title>
      <link>https://mohdur.github.io/post/zmiana-has%C5%82a-w-kluczu-prywatnym-rsa-openvpn/</link>
      <pubDate>Wed, 14 Oct 2020 09:03:56 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zmiana-has%C5%82a-w-kluczu-prywatnym-rsa-openvpn/</guid>
      <description>Zmiana hasła za pomocą polecenia openssl.
1openssl rsa -des3 -in oldkey.pem -out newkey.pem </description>
    </item>
    
    <item>
      <title>Kompilacja Neomutt</title>
      <link>https://mohdur.github.io/post/kompilacja-neomutt/</link>
      <pubDate>Wed, 14 Oct 2020 08:13:55 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/kompilacja-neomutt/</guid>
      <description>Lista pakietów potrzebnych do kompilacji w systemu Fedora  compat-gdbm-devel cyrus-sasl-devel docbook-style-xsl docbook-utils gnutls-devel gpgme-devel krb5-devel kyotocabinet-devel libdb-devel libidn-devel lmdb-devel lua-devel ncurses-devel notmuch-devel qdbm-devel sqlite-devel  Instalacja pakietów 1sudo dnf install docbook-utils docbook-style-xsl gpgme-devel cyrus-sasl-devel \ 2 notmuch-devel gnutls-devel libidn-devel libdb-devel compat-gdbm-devel \ 3 lmdb-devel kyotocabinet-devel qdbm-devel krb5-devel lua-devel sqlite-devel \ 4 ncurses-devel Pobranie źródeł 1#!/usr/bin/env bash 2 3URL=https://api.github.com/repos/neomutt/neomutt/releases/latest 4NAME=neomutt 5 6mkdir $NAME 7curl -s $URL \ 8 | grep tarball_url \ 9 | cut -d &amp;#39;&amp;#34;&amp;#39; -f 4 \ 10 | wget -O $NAME.</description>
    </item>
    
    <item>
      <title>Ukrycie procesów innych użytkowników w systemie Linux</title>
      <link>https://mohdur.github.io/post/ukrycie-proces%C3%B3w-innych-u%C5%BCytkownik%C3%B3w-w-systemie-linux/</link>
      <pubDate>Wed, 14 Oct 2020 08:00:37 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/ukrycie-proces%C3%B3w-innych-u%C5%BCytkownik%C3%B3w-w-systemie-linux/</guid>
      <description>Ukrycie procesów innych użytkowników wiąże się z ponownym zmapowaniem wirtualnej partycji /proc.
1sudo mount -o remount,rw,hidepid=2 /proc Żeby ukryć procesy permanentnie należy do pliku /etc/fstab dodać:
1proc /proc proc defaults,hidepid=2 0 0 Wartości jakie może przyjmować parametr hidepid:
   Value Meaning     0 Everybody may access all /proc/[pid] directories. This is the traditional behavior, and the default if this mount option is not specified.   1 Users may not access files and subdirectories inside any /proc/[pid] directories but their own (the /proc/[pid] directories themselves remain visible).</description>
    </item>
    
  </channel>
</rss>
