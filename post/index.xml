<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on MOHDUR</title>
    <link>https://mohdur.github.io/post/</link>
    <description>Recent content in Posts on MOHDUR</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 22 Oct 2020 01:48:33 +0200</lastBuildDate><atom:link href="https://mohdur.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Konfiguracja interfejsu sieciowego za pomocą polecenia IP w systemie Linux</title>
      <link>https://mohdur.github.io/post/konfiguracja-interfejsu-sieciowego-za-pomoc%C4%85-polecenia-ip-w-systemie-linux/</link>
      <pubDate>Thu, 22 Oct 2020 01:48:33 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konfiguracja-interfejsu-sieciowego-za-pomoc%C4%85-polecenia-ip-w-systemie-linux/</guid>
      <description>Wyświetlenie informacji o interfejsach sieciowych 1ip addr Ustawienie połączenia sieciowego Pierwsze polecenie czyści tablicę routingu dla sieci 192.168.0.0/24 ip route flush default via 192.168.0.0/24
1ip route flush default via 192.168.0.0/24 2ip link set dev enp4s0f2 up 3ip addr add 192.168.0.100/24 dev enp4s0f2 4ip route add 192.168.0.0/24 dev enp4s0f2 5ip route add default via 192.168.0.251 6echo &amp;#34;nameserver 8.8.8.8&amp;#34; &amp;gt; /etc/resolv.conf Wyświetlenie informacji o interfejsie sieciowym 1$ ip a show lo 21: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 3 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 4 inet 127.</description>
    </item>
    
    <item>
      <title>Lokalna kopia zapasowa z wykorzystaniem restic</title>
      <link>https://mohdur.github.io/post/lokalna-kopia-zapasowa-z-wykorzystaniem-restic/</link>
      <pubDate>Thu, 22 Oct 2020 01:39:58 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/lokalna-kopia-zapasowa-z-wykorzystaniem-restic/</guid>
      <description>Restic jest programem do wykonywania kopii zapasowej na lokalnym dysku lub zdalnym zasobie np. Backblaze B2. Kopia zapasowa jest szyfrowana za pomocą klucza z hasłem.
Przygotowanie nowego repozytorium Utworzenie repozytorium w katalogu /opt/restic-repo
1restic init --repo /opt/restic-repo 2 3enter password for new repository: 4enter password again: 5created restic repository 4c5e0dc100 at /opt/restic-repo 6 7Please note that knowledge of your password is required to access 8the repository. Losing your password means that your data is 9irrecoverably lost.</description>
    </item>
    
    <item>
      <title>Ustawienie klawiatury w systemie linux</title>
      <link>https://mohdur.github.io/post/ustawienie-klawiatury-w-systemie-linux/</link>
      <pubDate>Thu, 22 Oct 2020 01:36:57 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/ustawienie-klawiatury-w-systemie-linux/</guid>
      <description>1stty -ixon # wyłączenie Ctrl+s 2 3if [ $DISPLAY ]; then 4 setxkbmap -option caps:escape # ustawia caps lock jako ESC 5 xmodmap -e &amp;#34;keycode 62 = Shift_Lock&amp;#34; # ustawia prawy Shift jako Shift Lock 6fi 1# Ustawienie ESC na klawiszu CapsLock 2setxkbmap -option caps:escape 3# caps:none - wyłączenie 4# caps:escape - dodatkowy escape 5# caps:super - dodatkowy windows key 6# setxkbmap -option - zresetowanie ustawień 7# setxkbmap -query - sprawdzenie ustawień Po wyłączeniu Ctrl+s możemy użyć tego skrótu w Vim do zapisania pliku</description>
    </item>
    
    <item>
      <title>SED receptury</title>
      <link>https://mohdur.github.io/post/sed-receptury.md/</link>
      <pubDate>Thu, 22 Oct 2020 01:35:23 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/sed-receptury.md/</guid>
      <description>Wyświetlanie pierwszej linii pliku 1sed q test.txt Wyświetlenie ostatniej linii pliku 1sed -n &amp;#39;$p&amp;#39; test.txt Wyświetlenie 25 linii pliku 1sed -n &amp;#39;25p&amp;#39; test.txt Wyświetlenie 6 pierwszych linii pliku 1sed &amp;#39;6q&amp;#39; test.txt Wyświetlenie zakresu linii pliku Wyświetla linię z zakresu od 1 do 4 pliku test.txt
1sed -n &amp;#39;1,4&amp;#39; test.txt Wyświetlenie dwóch różnych linii Wyświetlenie 4 i 6 linii pliku
1sed -n &amp;#39;4p;6p&amp;#39; test.txt 24 | 36 lsadfjla Wyświetlenie linii od 3 do ostatniej 1sed -n &amp;#39;3,$p&amp;#39; test.</description>
    </item>
    
    <item>
      <title>Generowanie liczb losowych</title>
      <link>https://mohdur.github.io/post/generowanie-liczb-losowych/</link>
      <pubDate>Thu, 22 Oct 2020 01:31:47 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/generowanie-liczb-losowych/</guid>
      <description>Wygenerowanie liczby losowej o określonej długości W tym wypadku jest to 20 cyfr
1&amp;lt; /dev/urandom | tr -cd &amp;#39;[:digit:]&amp;#39; | head -c20; echo </description>
    </item>
    
    <item>
      <title>Konfiguracja serwera OpenSSH</title>
      <link>https://mohdur.github.io/post/konfiguracja-serwera-openssh/</link>
      <pubDate>Thu, 22 Oct 2020 01:27:57 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konfiguracja-serwera-openssh/</guid>
      <description>Instalacja Instalacja w systemie Fedora
1$ sudo dnf install openssh-server Plik konfiguracyjny Znajduje się w /etc/ssh/sshd_config
Zmiana numeru portu Serwer SSH normalnie nasłuchuje na porcie 22, możemy to zmienić ustawiając parametr Port, parametr Port może występować kilkukrotnie, czyli serwer SSH może nasłuchiwać na wielu portach jednocześnie.
1Port 22 2Port 23034 Możemy użyć parametru ListenAddress, dzięki któremu możemy określić adres IP i port, na którym serwer SSH będzie nasłuchiwał.
1ListenAddress 0.0.0.0:22 2ListenAddress 192.</description>
    </item>
    
    <item>
      <title>Kopia zapasowa Minio &#43; Restic</title>
      <link>https://mohdur.github.io/post/kopia-zapasowa-minio-&#43;-restic/</link>
      <pubDate>Thu, 22 Oct 2020 01:24:15 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/kopia-zapasowa-minio-&#43;-restic/</guid>
      <description>Kopie zapasową możemy przechowywać na serwerze MinIO https://min.io/, jest to serwer służący do przechowywania danych kompatybilny z Amazon S3.
Serwer można uruchomić z pliku binarnego na lokalnymsystemie lub w dockerze.
Uruchomienie serwera Po pobraniu pliku minio tworzymy katalog gdzie będą przechowywane dane:
1mkdir data Uruchomieni serwera
1minio server data 2Endpoint: http://192.168.122.1:9000 http://127.0.0.1:9000 3AccessKey: HWSZL5OL9X37S0DSC3EW 4SecretKey: d5ByBS50pffe90s9bKqWxxse4jBmEp9Zp5sv0c4c 5 6Browser Access: 7 http://192.168.122.1:9000 http://127.0.0.1:9000 8 9Command-line Access: https://docs.min.io/docs/minio-client-quickstart-guide 10 $ mc config host add myminio http://192.</description>
    </item>
    
    <item>
      <title>Kopia zapasowa informacji o repozytoriach Git</title>
      <link>https://mohdur.github.io/post/kopia-zapasowa-informacji-o-repozytoriach-git/</link>
      <pubDate>Thu, 22 Oct 2020 01:22:38 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/kopia-zapasowa-informacji-o-repozytoriach-git/</guid>
      <description>Przygotowałem skrypt, który przeszukuje katalog ~/src i wykonuje kopię zapasową plików kompiluj.sh oraz adres url repozytorium. Całość ląduje w katalogu ~/src/src-repozytoria.
1#!/bin/bash 2 3cd ~/src 4 5test -d src-repozytoria || mkdir src-repozytoria 6 7for dir in $(ls -d */); do 8 cd $dir 9 if [ -f ./kompiluj.sh ]; then 10 test -d ~/src/src-repozytoria/$dir || mkdir ~/src/src-repozytoria/$dir 11 cat ./kompiluj.sh &amp;gt; ~/src/src-repozytoria/$dir/kompiluj.sh 12 fi 13 if [ -f .git/config ]; then 14 test -d ~/src/src-repozytoria/$dir || mkdir ~/src/src-repozytoria/$dir 15 URL=$(grep url .</description>
    </item>
    
    <item>
      <title>Aliasy BASH ZSH</title>
      <link>https://mohdur.github.io/post/aliasy-bash-zsh/</link>
      <pubDate>Thu, 22 Oct 2020 01:20:20 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/aliasy-bash-zsh/</guid>
      <description>Część aliasów ma ustawione parametry dla polecenia np. alias ss=&#39;ss -tumanp&#39; jeśli będziemy chcieli pominąć te parametry należy podać pełną ścieżke do polecenia ss: /usr/sbin/ss.
Ścieżki do katalogów 1[ -d ~/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/bin 2[ -d ~/.local/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/.local/bin 3[ -d ~/.cargo/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/.cargo/bin 4[ -d ~/go/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/go/bin 5[ -d ~/node_modules/.bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/node_modules/.bin Aliasy podstawowe 1alias q=exit 2alias Q=exit 3alias more=less 4alias so=&amp;#39;source&amp;#39; 5alias psgrep=&amp;#39;ps ax | grep &amp;#39; 6alias cp=&amp;#34;cp -i&amp;#34; 7alias df=&amp;#39;df -h&amp;#39; 8alias free=&amp;#39;free -m&amp;#39; 9alias mountt=&amp;#39;mount | column -t&amp;#39; Aliasy narzędzi sieciowych 1alias ip=&amp;#39;sudo ip&amp;#39; 2alias ifconfig=&amp;#39;ip a s&amp;#39; 3alias myip=&amp;#39;ip-br -c a&amp;#39; 4alias arp=&amp;#39;ip n&amp;#39; 5alias iptraf=&amp;#39;sudo iptraf-ng&amp;#39; 6alias ss=&amp;#39;sudo ss -tumanp&amp;#39; 7alias netstat=&amp;#39;sudo netstat&amp;#39; 8alias nmap=&amp;#39;sudo nmap&amp;#39; 9alias lsof=&amp;#39;sudo lsof&amp;#39; Aliasy sudo 1alias cryptsetup=&amp;#39;sudo cryptsetup&amp;#39; 2alias fdisk=&amp;#39;sudo fdisk&amp;#39; 3alias cfdisk=&amp;#39;sudo cfdisk&amp;#39; 4alias mount=&amp;#39;sudo mount&amp;#39; 5alias m=&amp;#39;sudo mount&amp;#39; 6alias umount=&amp;#39;sudo umount&amp;#39; 7alias iotop=&amp;#39;sudo iotop&amp;#39; Aliasy ls 1alias ls=&amp;#39;ls --color=auto&amp;#39; 2alias ll=&amp;#39;ls -alFh&amp;#39; 3alias la=&amp;#39;ls -Ah&amp;#39; 4alias l=&amp;#39;ls -CFh&amp;#39; Katalogi 1alias b=&amp;#34;cd ~/Books&amp;#34; 2alias h=&amp;#34;cd ~&amp;#34; 3alias .</description>
    </item>
    
    <item>
      <title>Aktualizacja Fedora Linux do nowego wydania</title>
      <link>https://mohdur.github.io/post/aktualizacja-fedora-linux-do-nowego-wydania/</link>
      <pubDate>Thu, 22 Oct 2020 01:16:44 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/aktualizacja-fedora-linux-do-nowego-wydania/</guid>
      <description>Aktualizacja do nowego wydania to kilka poleceń, pierwszy etap to pobranie niezbędnych pakietów, po czym wykonujemy restart systemu, podczas którego system zostanie zaktualizowany operacja może potrwać kilkanaście minut do kilkudziesięciu w zależności od konfiguracji sprzętowej oraz liczby pakietów.
UWAGA! Po wykonaniu ostatniego polecenia dnf system-upgrade reboot system będzie przez dłuższy czas niedostępny.
1dnf upgrade --refresh 2dnf install dnf-plugin-system-upgrade 3dnf system-upgrade download --releasever=30 4dnf system-upgrade reboot </description>
    </item>
    
    <item>
      <title>Formatowanie daty i godziny</title>
      <link>https://mohdur.github.io/post/formatowanie-daty-i-godziny/</link>
      <pubDate>Thu, 22 Oct 2020 00:21:03 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/formatowanie-daty-i-godziny/</guid>
      <description>Standardowy wynik polecenia date bez formatowania
1wto, 25 cze 2019, 13:03:54 CEST Formatowanie wyniku polecenia date odbywa się za pomocą parametrów występujących po znaku + np.
1$ date +%F 22019-06-25 Wszystkie znaki formatujące można łączyć a także używać normalnych znaków np. date +%F-%T. Żeby uzyskać znak % należy użyć go dwukrotnie %%.
Przydatne formatowanie    format opis     %F data w formacie 2019-06-25   %T godzina w formacie 13:04:57   %s czas w formacie EPOCH 1561460865    Data    format opis     %a skrócona nazwa dnia tygodnia wto   %A nazwa dnia tygodnia wtorek   %b skrócona nazwa miesiąca cze   %B nazwa miesiąca czerwca   %w 0 - dzień tygodnia 0-6 - 0 to niedziela   %y skrócony rok 19   %Y rok 2019   %m numer miesiąca 06   %d dzień miesiąca 25 od 01-31   %e dzień miesiąca 25 od 1-31    Czas    format opis     %T czas w formacie 13:04:57   %l godzina 1 od 1-12   %I godzina 01 od 01-12   %H godzina 13 od 00-23   %M minuta 26 od 00-59   %S sekunda 47 od 00-60   %p AM/PM PM   %Z strefa czasowa CEST   %j dzień roku 176 od 001-366    </description>
    </item>
    
    <item>
      <title>Archiwizacja plików za pomocą polecenia tar</title>
      <link>https://mohdur.github.io/post/archiwizacja-plik%C3%B3w-za-pomoc%C4%85-polecenia-tar/</link>
      <pubDate>Thu, 22 Oct 2020 00:15:27 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/archiwizacja-plik%C3%B3w-za-pomoc%C4%85-polecenia-tar/</guid>
      <description>Przydatne parametry polecenia tar 1-z - kompresuje gzip 2-j - kompresuje bzip2 3-J - kompresuje xz 4-a - dobiera sposób kompresji po rozszerzeniu pliku 5-f - plik wynikowy 6-x - dekompresuje 7-C - zmienia katalog przed rozpoczęciem archiwizacji Przykłady Tworzy archiwum pandoc.tgz katalogu pandoc 1tar -caf pandoc.tgz pandoc Przechodzi do katalogu pandoc i tworzy archiwum używając kompresji xz 1tar -C pandoc -caf pandoc.txz . Sprawdzenie wielkości archiwum przed i po kompresji 1gzip -l site-hugo.</description>
    </item>
    
    <item>
      <title>Naprawienie SSH Too Many Authentication Failures</title>
      <link>https://mohdur.github.io/post/naprawienie-ssh-too-many-authentication-failures/</link>
      <pubDate>Wed, 21 Oct 2020 22:06:53 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/naprawienie-ssh-too-many-authentication-failures/</guid>
      <description>Jeśli przy łączeniu się przez SSH uzyskamy komunikat o treści &amp;quot;SSH Too Many Authentication Failures&amp;quot;, to jasne jest, że próbująć łączyć się ze zdalnych hostem podaliśmy za dużo razy nieprawidłowe hasło. Taki sam komunikat może pokazać się w sytuacji kiedy do autoryzacji używamy klucza RSA/DSA. Okazuje się, że jeśli posiadamy zbyt dużą ilość kluczy, może okazać się, że otrzymamy taki komunikat, wynika to z tego że każde sprawdzenie klucza jest uznawane za kolejną próbę autoryzacji.</description>
    </item>
    
    <item>
      <title>Uruchomienie skryptu po wykryciu zmian</title>
      <link>https://mohdur.github.io/post/uruchomienie-skryptu-po-wykryciu-zmian/</link>
      <pubDate>Wed, 21 Oct 2020 21:56:55 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/uruchomienie-skryptu-po-wykryciu-zmian/</guid>
      <description>Za pomocą skryptu, który operuje na sumach kontrolnych, można monitorować wybrany plik. Jeśli monitorowany plik się zmieni lub zostanie zapisany, skrypt automatycznie go uruchomi, dzięki temu nie trzeba za każdym razem uruchomiać go podczas kodowania.
Istnieją programy, które wykonują to samo, takie jak entr czy inotifywait, niesety trzeba je doinstalować, o ile nie chcemy używać ich dodatkowych funkcji, można korzystać z tego skryptu.
Jako parametr należy podać nazwę pliku, który chcemy monitorować.</description>
    </item>
    
    <item>
      <title>Zmiana rozdzielczości ekranu</title>
      <link>https://mohdur.github.io/post/zmiana-rozdzielczo%C5%9Bci-ekranu/</link>
      <pubDate>Wed, 21 Oct 2020 21:52:41 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zmiana-rozdzielczo%C5%9Bci-ekranu/</guid>
      <description>Kiedy chcemy zmienić rozdzielczość, ale okazuje się, mimo że w specyfikacji nasz ekran obsługuje taką rozdzielczość to jej nie ma :( Ma to często miejsce przy wirtualizacji. Tak więc musimy taką rozdzielczość dodać do listy.
Sprawdzamy ustawienia dla nowej rozdzielczości za pomocą polecenia gtf
1$ gtf 1920 1080 60 2 3# 1920x1080 @ 60.00 Hz (GTF) hsync: 67.08 kHz; pclk: 172.80 MHz 4Modeline &amp;#34;1920x1080_60.00&amp;#34; 172.80 1920 2040 2248 2576 1080 1081 1084 1118 -HSync +Vsync Dodajemy nową rozdzielczość i ustawiamy ją na ekranie Virtual1</description>
    </item>
    
    <item>
      <title>rsync receptury</title>
      <link>https://mohdur.github.io/post/rsync-receptury/</link>
      <pubDate>Wed, 21 Oct 2020 21:51:21 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/rsync-receptury/</guid>
      <description>Synchronizacja przez SSH 1-e ssh | połączenie przez SSH np. -e &amp;#34;ssh -l ssh-user -p 22&amp;#34; 2-a | zastępuje kilka parametrów -r -l -p -t -g -o -D 3-v | wyświetla bieżącą operację 4-z | włącza kompresję 5--delete-before | kasuje pliki w docelowej lokalizacji jeśli te nie istnieją w źródłowej lokalizacji 6-n | --dry-run - testowa synchronizacja 7-r | synchronizuje podkatalogi 8-l | kopiuje linki symboliczne jako linki symboliczne 9-p | zachowuje uprawnienia 10-t | zachowuje uprawnienia dla grupy 11-o | zachowuje uprawnienia dla użytkownika 12-D | zachowuje pliki urządzeń (tylko root) 1cd ~/Nextcloud 2rsync -avz --delete-before -e ssh Instrukcje/ użytkownik@hostname:/opt/backup-rsync/Instrukcje 1cd ~/Książki 2rsync -avz --delete-before -e ssh .</description>
    </item>
    
    <item>
      <title>Vim praca z powłoką systemową</title>
      <link>https://mohdur.github.io/post/vim-praca-z-pow%C5%82ok%C4%85-systemow%C4%85/</link>
      <pubDate>Wed, 21 Oct 2020 21:22:56 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-praca-z-pow%C5%82ok%C4%85-systemow%C4%85/</guid>
      <description>Edytor Vim potrafi korzystać z powłoki systemowej za pomocą polecenia :r ! czy też !. Polecenie r! pozwala odczytać standardowe wyjście polecenia i wstawić je do bufora. Polecenie ! po prostu wykonuje polecenie systemowe.
Wstawienie wyjścia polecenia systemowego do bufora Polecenie ls -alh, wyświetlające wszystkie pliki w bieżącym katalogu, jednocześnie ustawia cztery kolumny w odpowiedniej kolejności: nazwa, rozmiar, data, godzina.
1:r!ls -alh | awk &amp;#39;{ print &amp;#34; &amp;#34;, $8, &amp;#34; &amp;#34;, $5, &amp;#34; &amp;#34;, $6, &amp;#34; &amp;#34;, $7}&amp;#39; | column -t 2.</description>
    </item>
    
    <item>
      <title>Vim uruchomienie polecenia z bufora</title>
      <link>https://mohdur.github.io/post/vim-uruchomienie-polecenia-z-bufora/</link>
      <pubDate>Wed, 21 Oct 2020 19:11:09 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-uruchomienie-polecenia-z-bufora/</guid>
      <description>Do skopiowania treści z bufora (edytowanego pliku) i wprowadzenie go do linii komend edytora Vim, użyjemy mechanizmu rejestrów, więcej na temat rejestrów można dowiedzieć się z pomocy :help registers. Żeby sprawdzić co mamy w rejestrze możemy użyć polecenia :registers lub :display w skrócie :reg i :dis. Standardowo pod znakiem &amp;quot; jest ostatni wpis. Żeby użyć polecenia z rejestru pod numerem 5 wprowadzamy następującą kombinację klawiszy:
1:Ctrl+r5 Oto przykład użycia polecenia :reg</description>
    </item>
    
    <item>
      <title>Vim wysyłanie bieżącej linii do innego pliku</title>
      <link>https://mohdur.github.io/post/vim-wysy%C5%82anie-bie%C5%BC%C4%85cej-linii-do-innego-pliku/</link>
      <pubDate>Wed, 21 Oct 2020 19:05:40 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-wysy%C5%82anie-bie%C5%BC%C4%85cej-linii-do-innego-pliku/</guid>
      <description>Przy tej operacji użyjemy funkcji writefile oraz getreg, wysłanie bieżącej linii do innego pliku w tym wypadku oznacza usunięcie linii z bieżącego bufora i wklejenie jej do innego pliku.
W tym wypadku zostanie zmapowana kombinacja klawiszy &amp;lt;leader&amp;gt;sv, która wyśle linię do pliku ~/todo/vim.md.
1nnoremap &amp;lt;leader&amp;gt;sv :d&amp;lt;cr&amp;gt;:cd ~/todo/&amp;lt;cr&amp;gt;:call writefile(getreg(&amp;#39;@&amp;#39;, 1, 1), &amp;#39;vim.md&amp;#39;, &amp;#39;a&amp;#39;)&amp;lt;cr&amp;gt;:cd %:p:h&amp;lt;cr&amp;gt; Możemy wysłać kilka linii do innego pliku używając trybu VISUAL (Shift+v), także w tym przypadku jest zmapowana ta sama kombinacja klawiszy &amp;lt;leader&amp;gt;sv.</description>
    </item>
    
    <item>
      <title>NMCLI i OpenVPN</title>
      <link>https://mohdur.github.io/post/nmcli-i-openvpn/</link>
      <pubDate>Wed, 21 Oct 2020 14:43:50 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/nmcli-i-openvpn/</guid>
      <description>Import konfiguracji z pliku 1sudo nmcli connection import type openvpn file nazwa_pliku.ovpn Lista dostępnych połączeń 1nmcli connection show Podłączenie OpenVPN Jeśli klucz OpenVPN jest zabezpieczony hasłem należy dodać parametr --ask
1nmcli connection up nazwa_vpn --ask Export połączenia OpenVPN 1nmcli connection export nazwa_połączenia </description>
    </item>
    
    <item>
      <title>Pobranie ostatniego wydania programu z repozytorium Github</title>
      <link>https://mohdur.github.io/post/pobranie-ostatniego-wydania-programu-z-repozytorium-github/</link>
      <pubDate>Thu, 15 Oct 2020 21:20:19 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/pobranie-ostatniego-wydania-programu-z-repozytorium-github/</guid>
      <description>Pobranie wersji binarnej 1#!/usr/bin/env bash 2 3curl -s https://api.github.com/repos/junegunn/fzf-bin/releases/latest \ 4 | grep browser_download_url \ 5 | grep linux_amd64 \ 6 | cut -d &amp;#39;&amp;#34;&amp;#39; -f 4 \ 7 | wget -O fzf-bin.tgz -qi - 8 9tar xf fzf-bin.tgz 10rm fzf-bin.tgz Pobranie źródeł Pobranie śródeł kiedy są tworzone wydania
1#!/usr/bin/env bash 2 3curl -s https://api.github.com/repos/lotabout/skim/releases/latest \ 4 | grep tarball_url \ 5 | cut -d &amp;#39;&amp;#34;&amp;#39; -f 4 \ 6 | wget -O skim-src.</description>
    </item>
    
    <item>
      <title>Konfiguracja usługi SSH w RouterOS (Mikrotik)</title>
      <link>https://mohdur.github.io/post/konfiguracja-us%C5%82ugi-ssh-w-routeros-mikrotik/</link>
      <pubDate>Wed, 14 Oct 2020 21:01:41 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konfiguracja-us%C5%82ugi-ssh-w-routeros-mikrotik/</guid>
      <description>Ustawienie mocniejszej kryptografi i kluczy dla hosta o większej długości 1/ip ssh set strong-crypto=yes Zmiana długości klucza hosta wymaga wygenerowania ponownie klucza, ta operacja może potrwać do kilkudziesięciu minut w zależności od długości klucza oraz mocy obliczeniowych procesora.
1/ip ssh set host-key-size=4096 2/ip ssh regenerate-host-key Wygenerowanie klucza RSA w systemie Linux 1$ ssh-keygen -t RSA -b 4096 -f mikrotik-rsa Autoryzacja za pomocą klucza RSA i hasła Najpierw należy wygenerować taki klucz, następnie przesłać na urządzenie i dopisać do konkretnego użytkownika.</description>
    </item>
    
    <item>
      <title>Nazwa pliku, wyśwetlanie nazwy i rozszerzenia</title>
      <link>https://mohdur.github.io/post/nazwa-pliku-wy%C5%9Bwetlanie-nazwy-i-rozszerzenia/</link>
      <pubDate>Wed, 14 Oct 2020 15:17:50 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/nazwa-pliku-wy%C5%9Bwetlanie-nazwy-i-rozszerzenia/</guid>
      <description>Nazwa pliku bez ścieżki Na podstawie prostego skryptu pokażę jak wyświetlić nazwę pliku bez katalogu oraz jak wyświetlić samą nazwę pliku bez rozszerzenia.
Pętla for pokazuje wszystkie pliki w katalogu katalog wraz z nazwą tego katalogu np. katalog/nazwa-pliku.txt, chcąc uzyskać samą nazwę pliku użyjemy komendy basename.
1for i in katalog/*.txt 2do 3 PLIK=$(basename $i | cut -d &amp;#39;.&amp;#39; -f 1) 4 echo &amp;#34;$PLIK&amp;#34; 5done Inny przykład użycia komendy basename
1VIMRC_DIR=&amp;#34;$HOME/.vim/vimrc&amp;#34; 2VIMRC=$(basename &amp;#34;$VIMRC_DIR&amp;#34;) 3echo $VIMRC 1vimrc Użycie komendy basename</description>
    </item>
    
    <item>
      <title>Mikrotik i Wireguard VPN</title>
      <link>https://mohdur.github.io/post/mikrotik-i-wireguard-vpn/</link>
      <pubDate>Wed, 14 Oct 2020 14:03:25 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/mikrotik-i-wireguard-vpn/</guid>
      <description>Od kilku tygodni jest dostępna wersja 7.1beta2 (Developmend) systemu RouterOS głównie przeznaczonych dla urządzeń Mikrotik. Od tej wersji istnieje wsparcie dla usługi Wireguard VPN. Należy zaznaczyć iż jest to wersja, której nie należy używać w środowisku produkcyjnym.
Na razie w wersji 7.1beta2 nie ma możliwości zestawienia takiego połączenia za pomocą programu WinBox ani interfejsu WWW. Problem występuje w polu endpoint, które nie przyjmuje numeru portu dla zdalnego hosta. Jedyna możliwość to użyć linii komend.</description>
    </item>
    
    <item>
      <title>Zmiana hasła w kluczu prywatnym RSA (OpenVPN)</title>
      <link>https://mohdur.github.io/post/zmiana-has%C5%82a-w-kluczu-prywatnym-rsa-openvpn/</link>
      <pubDate>Wed, 14 Oct 2020 09:03:56 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zmiana-has%C5%82a-w-kluczu-prywatnym-rsa-openvpn/</guid>
      <description>Zmiana hasła za pomocą polecenia openssl.
1openssl rsa -des3 -in oldkey.pem -out newkey.pem </description>
    </item>
    
    <item>
      <title>Kompilacja Neomutt</title>
      <link>https://mohdur.github.io/post/kompilacja-neomutt/</link>
      <pubDate>Wed, 14 Oct 2020 08:13:55 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/kompilacja-neomutt/</guid>
      <description>Lista pakietów potrzebnych do kompilacji w systemu Fedora  docbook-utils docbook-style-xsl gpgme-devel cyrus-sasl-devel notmuch-devel gnutls-devel libidn-devel libdb4-devel libdb-devel compat-gdbm-devel lmdb-devel kyotocabinet-devel qdbm-devel krb5-devel  Kompilacja 1./configure --enable-ssl --enable-gpgme --notmuch \ 2--gnutls --enable-gss --sasl --bdb --gdbm \ 3--kyotocabinet --lmdb --qdbm 4 5make 6sudo make install </description>
    </item>
    
    <item>
      <title>Ukrycie procesów innych użytkowników w systemie Linux</title>
      <link>https://mohdur.github.io/post/ukrycie-proces%C3%B3w-innych-u%C5%BCytkownik%C3%B3w-w-systemie-linux/</link>
      <pubDate>Wed, 14 Oct 2020 08:00:37 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/ukrycie-proces%C3%B3w-innych-u%C5%BCytkownik%C3%B3w-w-systemie-linux/</guid>
      <description>Ukrycie procesów innych użytkowników wiąże się z ponownym zmapowaniem wirtualnej partycji /proc.
1sudo mount -o remount,rw,hidepid=2 /proc Żeby ukryć procesy permanentnie należy do pliku /etc/fstab dodać:
1proc /proc proc defaults,hidepid=2 0 0 Wartości jakie może przyjmować parametr hidepid:
   Value Meaning     0 Everybody may access all /proc/[pid] directories. This is the traditional behavior, and the default if this mount option is not specified.   1 Users may not access files and subdirectories inside any /proc/[pid] directories but their own (the /proc/[pid] directories themselves remain visible).</description>
    </item>
    
  </channel>
</rss>
