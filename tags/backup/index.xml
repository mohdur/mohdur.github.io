<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backup on MOHDUR</title>
    <link>https://mohdur.github.io/tags/backup/</link>
    <description>Recent content in Backup on MOHDUR</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 22 Oct 2020 01:39:58 +0200</lastBuildDate><atom:link href="https://mohdur.github.io/tags/backup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lokalna kopia zapasowa z wykorzystaniem restic</title>
      <link>https://mohdur.github.io/post/lokalna-kopia-zapasowa-z-wykorzystaniem-restic/</link>
      <pubDate>Thu, 22 Oct 2020 01:39:58 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/lokalna-kopia-zapasowa-z-wykorzystaniem-restic/</guid>
      <description>Restic jest programem do wykonywania kopii zapasowej na lokalnym dysku lub zdalnym zasobie np. Backblaze B2. Kopia zapasowa jest szyfrowana za pomocą klucza z hasłem.
Przygotowanie nowego repozytorium Utworzenie repozytorium w katalogu /opt/restic-repo
1restic init --repo /opt/restic-repo 2 3enter password for new repository: 4enter password again: 5created restic repository 4c5e0dc100 at /opt/restic-repo 6 7Please note that knowledge of your password is required to access 8the repository. Losing your password means that your data is 9irrecoverably lost.</description>
    </item>
    
    <item>
      <title>Kopia zapasowa Minio &#43; Restic</title>
      <link>https://mohdur.github.io/post/kopia-zapasowa-minio-&#43;-restic/</link>
      <pubDate>Thu, 22 Oct 2020 01:24:15 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/kopia-zapasowa-minio-&#43;-restic/</guid>
      <description>Kopie zapasową możemy przechowywać na serwerze MinIO https://min.io/, jest to serwer służący do przechowywania danych kompatybilny z Amazon S3.
Serwer można uruchomić z pliku binarnego na lokalnymsystemie lub w dockerze.
Uruchomienie serwera Po pobraniu pliku minio tworzymy katalog gdzie będą przechowywane dane:
1mkdir data Uruchomieni serwera
1minio server data 2Endpoint: http://192.168.122.1:9000 http://127.0.0.1:9000 3AccessKey: HWSZL5OL9X37S0DSC3EW 4SecretKey: d5ByBS50pffe90s9bKqWxxse4jBmEp9Zp5sv0c4c 5 6Browser Access: 7 http://192.168.122.1:9000 http://127.0.0.1:9000 8 9Command-line Access: https://docs.min.io/docs/minio-client-quickstart-guide 10 $ mc config host add myminio http://192.</description>
    </item>
    
    <item>
      <title>Archiwizacja plików za pomocą polecenia tar</title>
      <link>https://mohdur.github.io/post/archiwizacja-plik%C3%B3w-za-pomoc%C4%85-polecenia-tar/</link>
      <pubDate>Thu, 22 Oct 2020 00:15:27 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/archiwizacja-plik%C3%B3w-za-pomoc%C4%85-polecenia-tar/</guid>
      <description>Przydatne parametry polecenia tar 1-z - kompresuje gzip 2-j - kompresuje bzip2 3-J - kompresuje xz 4-a - dobiera sposób kompresji po rozszerzeniu pliku 5-f - plik wynikowy 6-x - dekompresuje 7-C - zmienia katalog przed rozpoczęciem archiwizacji Przykłady Tworzy archiwum pandoc.tgz katalogu pandoc 1tar -caf pandoc.tgz pandoc Przechodzi do katalogu pandoc i tworzy archiwum używając kompresji xz 1tar -C pandoc -caf pandoc.txz . Sprawdzenie wielkości archiwum przed i po kompresji 1gzip -l site-hugo.</description>
    </item>
    
    <item>
      <title>rsync receptury</title>
      <link>https://mohdur.github.io/post/rsync-receptury/</link>
      <pubDate>Wed, 21 Oct 2020 21:51:21 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/rsync-receptury/</guid>
      <description>Synchronizacja przez SSH 1-e ssh | połączenie przez SSH np. -e &amp;#34;ssh -l ssh-user -p 22&amp;#34; 2-a | zastępuje kilka parametrów -r -l -p -t -g -o -D 3-v | wyświetla bieżącą operację 4-z | włącza kompresję 5--delete-before | kasuje pliki w docelowej lokalizacji jeśli te nie istnieją w źródłowej lokalizacji 6-n | --dry-run - testowa synchronizacja 7-r | synchronizuje podkatalogi 8-l | kopiuje linki symboliczne jako linki symboliczne 9-p | zachowuje uprawnienia 10-t | zachowuje uprawnienia dla grupy 11-o | zachowuje uprawnienia dla użytkownika 12-D | zachowuje pliki urządzeń (tylko root) 1cd ~/Nextcloud 2rsync -avz --delete-before -e ssh Instrukcje/ użytkownik@hostname:/opt/backup-rsync/Instrukcje 1cd ~/Książki 2rsync -avz --delete-before -e ssh .</description>
    </item>
    
  </channel>
</rss>
