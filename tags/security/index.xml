<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on MOHDUR</title>
    <link>https://mohdur.github.io/tags/security/</link>
    <description>Recent content in Security on MOHDUR</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 24 Oct 2020 19:25:13 +0200</lastBuildDate><atom:link href="https://mohdur.github.io/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Easy RSA i OpenVPN 2.4</title>
      <link>https://mohdur.github.io/post/easy-rsa-openvpn-2-4/</link>
      <pubDate>Sat, 24 Oct 2020 19:25:13 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/easy-rsa-openvpn-2-4/</guid>
      <description>Easy RSA 3 jest ciutkę inne od jego poprzednich wersji, powinieneś to przejść bez większych problemów.
Zaczynamy od pobrania ostatniej wersji https://github.com/OpenVPN/easy-rsa/releases
1# cd /etc/openvpn 2# tar zxvf EASY_RSA.tar.gz 3# cd Easy_RSA Skrypt tworzący CA Pierwszy skrypt 01_init tworzy CA
1#!/bin/bash 2 3if [ $# -ne 1 ]; then 4 echo Podaj jako parametr nazwę certyfikatu dla serwera np. nazwę DNS lub adres IP. 5 exit 6fi 7 8echo Inicjuje PKI 9.</description>
    </item>
    
    <item>
      <title>Generowanie haseł</title>
      <link>https://mohdur.github.io/post/generowanie-hase%C5%82/</link>
      <pubDate>Sat, 24 Oct 2020 18:08:03 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/generowanie-hase%C5%82/</guid>
      <description>Parametr -S to zarodek (salt), który jest generowany za pomocą polecenia pwgen.
1mkpasswd -m sha-512 -S $(pwgen -n 16 | cut -f 1 -d &amp;#39; &amp;#39;) -s &amp;lt;&amp;lt;&amp;lt; Hasło Wersja z wykorzystaniem urządzenia /dev/urandom
1$ mkpasswd -m sha-512 -S $(&amp;lt; /dev/urandom tr -cd &amp;#34;[:alnum:]&amp;#34; | head -c${1:-16}; echo) -s &amp;lt;&amp;lt;&amp;lt; hasło 2$6$AnSw5avmi6cwpxzG$bnLa8cWs5FhdDU49jzdyxR4Fw0p3MGWcDLzwOd1x564I4iKJFmNwdq3BgkpBo/fSG1YCYbYMD9eE993GpTRQq0 Generowanie hasła za pomocą OpenSSL
1openssl rand -base64 36 23WC8BpncVVQyzdHHWlULV1VzW7LnHs0erGIuCHTZ+Zt9YU/t Użycie dd
1dd if=/dev/urandom bs=10 count=30 | tr -cd &amp;#39;[:alnum:]&amp;#39; 230+0 records in 330+0 records out 4300 bytes (300 B) copied, 0.</description>
    </item>
    
    <item>
      <title>Generowanie kodu QR dla autoryzacj 2FA</title>
      <link>https://mohdur.github.io/post/generowanie-kodu-qr-dla-autoryzacj-2fa/</link>
      <pubDate>Sat, 24 Oct 2020 17:00:15 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/generowanie-kodu-qr-dla-autoryzacj-2fa/</guid>
      <description>Instalacja pakietu qrencode
1sudo dnf install qrencode Tak wygląda kod QR w postaci linku
1otpauth://totp/mohdur%40github?secret=OAPICAFAI7PJKHVN&amp;amp;issuer=github/mohdur&amp;amp;algorithm=SHA512&amp;amp;digits=6&amp;amp;period=30 Generowanie kodu do pliku PNG
1echo &amp;#34;otpauth://totp/mohdur%40github?secret=OAPICAFAI7PJKHVN&amp;amp;issuer=github/mohdur&amp;amp;algorithm=SHA512&amp;amp;digits=6&amp;amp;period=30&amp;#34; \ 2 | qrencode -t png -d 125 -lH -o qr.png </description>
    </item>
    
    <item>
      <title>Konfiguracja usługi SSH w RouterOS (Mikrotik)</title>
      <link>https://mohdur.github.io/post/konfiguracja-us%C5%82ugi-ssh-w-routeros-mikrotik/</link>
      <pubDate>Wed, 14 Oct 2020 21:01:41 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konfiguracja-us%C5%82ugi-ssh-w-routeros-mikrotik/</guid>
      <description>Ustawienie mocniejszej kryptografi i kluczy dla hosta o większej długości 1/ip ssh set strong-crypto=yes Zmiana długości klucza hosta wymaga wygenerowania ponownie klucza, ta operacja może potrwać do kilkudziesięciu minut w zależności od długości klucza oraz mocy obliczeniowych procesora.
1/ip ssh set host-key-size=4096 2/ip ssh regenerate-host-key Wygenerowanie klucza RSA w systemie Linux 1$ ssh-keygen -t RSA -b 4096 -f mikrotik-rsa Autoryzacja za pomocą klucza RSA i hasła Najpierw należy wygenerować taki klucz, następnie przesłać na urządzenie i dopisać do konkretnego użytkownika.</description>
    </item>
    
    <item>
      <title>Mikrotik i Wireguard VPN</title>
      <link>https://mohdur.github.io/post/mikrotik-i-wireguard-vpn/</link>
      <pubDate>Wed, 14 Oct 2020 14:03:25 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/mikrotik-i-wireguard-vpn/</guid>
      <description>Od kilku tygodni jest dostępna wersja 7.1beta2 (Developmend) systemu RouterOS głównie przeznaczonych dla urządzeń Mikrotik. Od tej wersji istnieje wsparcie dla usługi Wireguard VPN. Należy zaznaczyć iż jest to wersja, której nie należy używać w środowisku produkcyjnym.
Na razie w wersji 7.1beta2 nie ma możliwości zestawienia takiego połączenia za pomocą programu WinBox ani interfejsu WWW. Problem występuje w polu endpoint, które nie przyjmuje numeru portu dla zdalnego hosta. Jedyna możliwość to użyć linii komend.</description>
    </item>
    
    <item>
      <title>Zmiana hasła w kluczu prywatnym RSA (OpenVPN)</title>
      <link>https://mohdur.github.io/post/zmiana-has%C5%82a-w-kluczu-prywatnym-rsa-openvpn/</link>
      <pubDate>Wed, 14 Oct 2020 09:03:56 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zmiana-has%C5%82a-w-kluczu-prywatnym-rsa-openvpn/</guid>
      <description>Zmiana hasła za pomocą polecenia openssl.
1openssl rsa -des3 -in oldkey.pem -out newkey.pem </description>
    </item>
    
    <item>
      <title>Ukrycie procesów innych użytkowników w systemie Linux</title>
      <link>https://mohdur.github.io/post/ukrycie-proces%C3%B3w-innych-u%C5%BCytkownik%C3%B3w-w-systemie-linux/</link>
      <pubDate>Wed, 14 Oct 2020 08:00:37 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/ukrycie-proces%C3%B3w-innych-u%C5%BCytkownik%C3%B3w-w-systemie-linux/</guid>
      <description>Ukrycie procesów innych użytkowników wiąże się z ponownym zmapowaniem wirtualnej partycji /proc.
1sudo mount -o remount,rw,hidepid=2 /proc Żeby ukryć procesy permanentnie należy do pliku /etc/fstab dodać:
1proc /proc proc defaults,hidepid=2 0 0 Wartości jakie może przyjmować parametr hidepid:
   Value Meaning     0 Everybody may access all /proc/[pid] directories. This is the traditional behavior, and the default if this mount option is not specified.   1 Users may not access files and subdirectories inside any /proc/[pid] directories but their own (the /proc/[pid] directories themselves remain visible).</description>
    </item>
    
  </channel>
</rss>
