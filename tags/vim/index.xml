<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on MOHDUR</title>
    <link>https://mohdur.github.io/tags/vim/</link>
    <description>Recent content in Vim on MOHDUR</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 22 Oct 2020 23:50:24 +0200</lastBuildDate><atom:link href="https://mohdur.github.io/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vim wstawienie makietki</title>
      <link>https://mohdur.github.io/post/vim-wstawienie-makietki/</link>
      <pubDate>Thu, 22 Oct 2020 23:50:24 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-wstawienie-makietki/</guid>
      <description>Funkcja do działania wymaga pluginu fzf.vim https://github.com/junegunn/fzf.vim
Instalacja za pomocą menadżera vim-plug https://github.com/junegunn/vim-plug
1Plug &amp;#39;junegunn/fzf&amp;#39;, { &amp;#39;do&amp;#39;: { -&amp;gt; fzf#install() } }2Plug &amp;#39;junegunn/fzf.vim&amp;#39;Katalog z makietkami ustawiamy w zmiennej g:templates_dir
W funkcji s:read_template_into_buffer(template) możemy wprowadzić jedną modyfikację, jako, że makietek używa się do wstawienia typowej zawartości nagłówka pliku, to funkcja wstawia makietkę na początku pliku, za to odpowiedzialna jest linia (4) execute &#39;0r &#39;.g:templates_dir.&#39;/&#39;.a:template, zmieniając w niej 0r na .r, makietka będzie wstawiana w bieżącej linii zamiast na początku pliku.</description>
    </item>
    
    <item>
      <title>Vim lista projektów i FZF</title>
      <link>https://mohdur.github.io/post/vim-lista-projekt%C3%B3w-i-fzf/</link>
      <pubDate>Thu, 22 Oct 2020 23:37:27 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-lista-projekt%C3%B3w-i-fzf/</guid>
      <description>Dodajemy nową komendę FZFProj, która przeszukuje listę g:proj.
1let g:proj = [&amp;#39;~/git/&amp;#39;,2 \ &amp;#39;~/git/github&amp;#39;,3 \ &amp;#39;~/src&amp;#39;]45command! FZFProj call fzf#run({6 \ &amp;#39;source&amp;#39;: g:proj,7 \ &amp;#39;sink&amp;#39;: &amp;#39;e&amp;#39;,8 \ &amp;#39;options&amp;#39;: &amp;#39;-m -x +s&amp;#39;,9 \ &amp;#39;down&amp;#39;: &amp;#39;20%&amp;#39;})</description>
    </item>
    
    <item>
      <title>Vim praca z powłoką systemową</title>
      <link>https://mohdur.github.io/post/vim-praca-z-pow%C5%82ok%C4%85-systemow%C4%85/</link>
      <pubDate>Wed, 21 Oct 2020 21:22:56 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-praca-z-pow%C5%82ok%C4%85-systemow%C4%85/</guid>
      <description>Edytor Vim potrafi korzystać z powłoki systemowej za pomocą polecenia :r ! czy też !. Polecenie r! pozwala odczytać standardowe wyjście polecenia i wstawić je do bufora. Polecenie ! po prostu wykonuje polecenie systemowe.
Wstawienie wyjścia polecenia systemowego do bufora Polecenie ls -alh, wyświetlające wszystkie pliki w bieżącym katalogu, jednocześnie ustawia cztery kolumny w odpowiedniej kolejności: nazwa, rozmiar, data, godzina.
1:r!ls -alh | awk &amp;#39;{ print &amp;#34; &amp;#34;, $8, &amp;#34; &amp;#34;, $5, &amp;#34; &amp;#34;, $6, &amp;#34; &amp;#34;, $7}&amp;#39; | column -t 2.</description>
    </item>
    
    <item>
      <title>Vim uruchomienie polecenia z bufora</title>
      <link>https://mohdur.github.io/post/vim-uruchomienie-polecenia-z-bufora/</link>
      <pubDate>Wed, 21 Oct 2020 19:11:09 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-uruchomienie-polecenia-z-bufora/</guid>
      <description>Do skopiowania treści z bufora (edytowanego pliku) i wprowadzenie go do linii komend edytora Vim, użyjemy mechanizmu rejestrów, więcej na temat rejestrów można dowiedzieć się z pomocy :help registers. Żeby sprawdzić co mamy w rejestrze możemy użyć polecenia :registers lub :display w skrócie :reg i :dis. Standardowo pod znakiem &amp;quot; jest ostatni wpis. Żeby użyć polecenia z rejestru pod numerem 5 wprowadzamy następującą kombinację klawiszy:
1:Ctrl+r5 Oto przykład użycia polecenia :reg</description>
    </item>
    
    <item>
      <title>Vim wysyłanie bieżącej linii do innego pliku</title>
      <link>https://mohdur.github.io/post/vim-wysy%C5%82anie-bie%C5%BC%C4%85cej-linii-do-innego-pliku/</link>
      <pubDate>Wed, 21 Oct 2020 19:05:40 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/vim-wysy%C5%82anie-bie%C5%BC%C4%85cej-linii-do-innego-pliku/</guid>
      <description>Przy tej operacji użyjemy funkcji writefile oraz getreg, wysłanie bieżącej linii do innego pliku w tym wypadku oznacza usunięcie linii z bieżącego bufora i wklejenie jej do innego pliku.
W tym wypadku zostanie zmapowana kombinacja klawiszy &amp;lt;leader&amp;gt;sv, która wyśle linię do pliku ~/todo/vim.md.
1nnoremap &amp;lt;leader&amp;gt;sv :d&amp;lt;cr&amp;gt;:cd ~/todo/&amp;lt;cr&amp;gt;:call writefile(getreg(&amp;#39;@&amp;#39;, 1, 1), &amp;#39;vim.md&amp;#39;, &amp;#39;a&amp;#39;)&amp;lt;cr&amp;gt;:cd %:p:h&amp;lt;cr&amp;gt; Możemy wysłać kilka linii do innego pliku używając trybu VISUAL (Shift+v), także w tym przypadku jest zmapowana ta sama kombinacja klawiszy &amp;lt;leader&amp;gt;sv.</description>
    </item>
    
  </channel>
</rss>
