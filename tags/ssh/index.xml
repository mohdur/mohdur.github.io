<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SSH on MOHDUR</title>
    <link>https://mohdur.github.io/tags/ssh/</link>
    <description>Recent content in SSH on MOHDUR</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 24 Oct 2020 15:22:01 +0200</lastBuildDate><atom:link href="https://mohdur.github.io/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Praca z klientem OpenSSH</title>
      <link>https://mohdur.github.io/post/praca-z-klientem-openssh/</link>
      <pubDate>Sat, 24 Oct 2020 15:22:01 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/praca-z-klientem-openssh/</guid>
      <description>Nawiązanie połączenia ze zdalnym hostem 1ssh user@nazwa_serwera Autoryzacja za pomocą klucza Dwiema podstawowymi metodami autoryzacji do serwera SSH jest hasło oraz klucz prywatny. Dzięki pary kluczy to znaczy klucza prywatnego oraz klucza publicznego można zwiększyć bezpieczeństwo serwera SSH. Klucz publiczny można udostępniać publicznie i nie stanowi to zagrożenia, natomiast klucz prywatny należy zabezpieczyć dobrym hasłem i przechowywać go zdala od ciekawskich.
Generowanie pary kluczy 1ssh-keygen 1usage: ssh-keygen [-q] [-b bits] [-t dsa | ecdsa | ed25519 | rsa] 2 [-N new_passphrase] [-C comment] [-f output_keyfile] 3 ssh-keygen -p [-P old_passphrase] [-N new_passphrase] [-f keyfile] 4 ssh-keygen -i [-m key_format] [-f input_keyfile] 5 ssh-keygen -e [-m key_format] [-f input_keyfile] 6 ssh-keygen -y [-f input_keyfile] 7 ssh-keygen -c [-P passphrase] [-C comment] [-f keyfile] 8 ssh-keygen -l [-v] [-E fingerprint_hash] [-f input_keyfile] 9 ssh-keygen -B [-f input_keyfile] 10 ssh-keygen -D pkcs11 11 ssh-keygen -F hostname [-f known_hosts_file] [-l] 12 ssh-keygen -H [-f known_hosts_file] 13 ssh-keygen -R hostname [-f known_hosts_file] 14 ssh-keygen -r hostname [-f input_keyfile] [-g] 15 ssh-keygen -G output_file [-v] [-b bits] [-M memory] [-S start_point] 16 ssh-keygen -T output_file -f input_file [-v] [-a rounds] [-J num_lines] 17 [-j start_line] [-K checkpt] [-W generator] 18 ssh-keygen -s ca_key -I certificate_identity [-h] [-U] 19 [-D pkcs11_provider] [-n principals] [-O option] 20 [-V validity_interval] [-z serial_number] file .</description>
    </item>
    
    <item>
      <title>Konfiguracja serwera OpenSSH</title>
      <link>https://mohdur.github.io/post/konfiguracja-serwera-openssh/</link>
      <pubDate>Thu, 22 Oct 2020 01:27:57 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konfiguracja-serwera-openssh/</guid>
      <description>Instalacja Instalacja w systemie Fedora
1$ sudo dnf install openssh-server Plik konfiguracyjny Znajduje się w /etc/ssh/sshd_config
Zmiana numeru portu Serwer SSH normalnie nasłuchuje na porcie 22, możemy to zmienić ustawiając parametr Port, parametr Port może występować kilkukrotnie, czyli serwer SSH może nasłuchiwać na wielu portach jednocześnie.
1Port 22 2Port 23034 Możemy użyć parametru ListenAddress, dzięki któremu możemy określić adres IP i port, na którym serwer SSH będzie nasłuchiwał.
1ListenAddress 0.0.0.0:22 2ListenAddress 192.</description>
    </item>
    
    <item>
      <title>Naprawienie SSH Too Many Authentication Failures</title>
      <link>https://mohdur.github.io/post/naprawienie-ssh-too-many-authentication-failures/</link>
      <pubDate>Wed, 21 Oct 2020 22:06:53 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/naprawienie-ssh-too-many-authentication-failures/</guid>
      <description>Jeśli przy łączeniu się przez SSH uzyskamy komunikat o treści &amp;quot;SSH Too Many Authentication Failures&amp;quot;, to jasne jest, że próbująć łączyć się ze zdalnych hostem podaliśmy za dużo razy nieprawidłowe hasło. Taki sam komunikat może pokazać się w sytuacji kiedy do autoryzacji używamy klucza RSA/DSA. Okazuje się, że jeśli posiadamy zbyt dużą ilość kluczy, może okazać się, że otrzymamy taki komunikat, wynika to z tego że każde sprawdzenie klucza jest uznawane za kolejną próbę autoryzacji.</description>
    </item>
    
    <item>
      <title>Konfiguracja usługi SSH w RouterOS (Mikrotik)</title>
      <link>https://mohdur.github.io/post/konfiguracja-us%C5%82ugi-ssh-w-routeros-mikrotik/</link>
      <pubDate>Wed, 14 Oct 2020 21:01:41 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/konfiguracja-us%C5%82ugi-ssh-w-routeros-mikrotik/</guid>
      <description>Ustawienie mocniejszej kryptografi i kluczy dla hosta o większej długości 1/ip ssh set strong-crypto=yes Zmiana długości klucza hosta wymaga wygenerowania ponownie klucza, ta operacja może potrwać do kilkudziesięciu minut w zależności od długości klucza oraz mocy obliczeniowych procesora.
1/ip ssh set host-key-size=4096 2/ip ssh regenerate-host-key Wygenerowanie klucza RSA w systemie Linux 1$ ssh-keygen -t RSA -b 4096 -f mikrotik-rsa Autoryzacja za pomocą klucza RSA i hasła Najpierw należy wygenerować taki klucz, następnie przesłać na urządzenie i dopisać do konkretnego użytkownika.</description>
    </item>
    
  </channel>
</rss>
