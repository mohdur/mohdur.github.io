<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell on MOHDUR</title>
    <link>https://mohdur.github.io/tags/shell/</link>
    <description>Recent content in Shell on MOHDUR</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 24 Oct 2020 13:48:25 +0200</lastBuildDate><atom:link href="https://mohdur.github.io/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zmiana funkcjonalności przez zmianę nazwy skryptu</title>
      <link>https://mohdur.github.io/post/zmiana-funkcjonalno%C5%9Bci-przez-zmian%C4%99-nazwy-skryptu/</link>
      <pubDate>Sat, 24 Oct 2020 13:48:25 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/zmiana-funkcjonalno%C5%9Bci-przez-zmian%C4%99-nazwy-skryptu/</guid>
      <description>Utworzymy skrypt o nazwie funkcje, jeśli uruchomimy skypt nic się nie stanie, ale tworząc link symboliczny o nazwie new lub delete zostaną wykonane odpowiednio funkcje nowy i delete.
Skrypt zawiera instrukcję case, która operuje na nazwie skryptu za pomocą polecenia $(basename $0) gdzie $0 to nazwa skryptu, polecenie basename usuwa ./ z nazwy skryptu.
Konstrukcja $(basename $0) jest opcjonalna, oznacza to, że jeśli skrypt znajduje się w ścieżce $PATH i można go wykonać wpisując jego nazwę beż podania ścieżki to możemy użyć case &amp;quot;$0&amp;quot; in</description>
    </item>
    
    <item>
      <title>Skrypty BASH receptury</title>
      <link>https://mohdur.github.io/post/skrypty-bash-receptury/</link>
      <pubDate>Sat, 24 Oct 2020 13:20:08 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/skrypty-bash-receptury/</guid>
      <description>Sprawdzenie daty ostatniej modyfikaji pliku 1$ date -r nazwa_pliku.txt 2Fri 19 Apr 2019 08:41:11 AM CEST Do wyświetlenia możemy użyć standardowego formatowania polecenia data.
1$ date -r nazwa_pliku.txt &amp;#34;+%F %s&amp;#34; 22019-04-19 1555656071 Działania arytmetyczne na datach 1date_-d_&amp;#34;09/27/2019_08:53:52_AM_CEST_+2_days_+2_hours&amp;#34;_&amp;#34;+%F_%T&amp;#34; 1date_-d_&amp;#34;Tue_22_Oct_2019_08:53:52_AM_CEST_+2_days_+2_hours&amp;#34;_&amp;#34;+%F_%T&amp;#34; Argumenty wywołania skryptu    Identyfikator wywołania Opis     $0 Nazwa skryptu   $1, $2, ... Kolejne argumenty przekazane do skryptu   $# Liczba argumentów przekazanych do skryptu   $@, $* Wszystkie argumenty przekazane do skryptu    Przykłady:</description>
    </item>
    
    <item>
      <title>Kompilacja xurls</title>
      <link>https://mohdur.github.io/post/kompilacja-xurls/</link>
      <pubDate>Thu, 22 Oct 2020 16:32:55 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/kompilacja-xurls/</guid>
      <description>xurls to projekt, dzięki któremu będzie możliwe odnalezienie wszystkich adresów WWW w pliku lub strumieniu.
Źródła możemy pobrać ze strony https://github.com/mvdan/xurls.git następnie przechodzimy do katalogu cmd/xurls i wydajemy polecenie:
1go build -ldflags=&amp;#39;-w -s&amp;#39; Przykład wykorzystania
1cat plik.md | xurls </description>
    </item>
    
    <item>
      <title>SED receptury</title>
      <link>https://mohdur.github.io/post/sed-receptury/</link>
      <pubDate>Thu, 22 Oct 2020 01:35:23 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/sed-receptury/</guid>
      <description>Wyświetlanie pierwszej linii pliku 1sed q test.txt Wyświetlenie ostatniej linii pliku 1sed -n &amp;#39;$p&amp;#39; test.txt Wyświetlenie 25 linii pliku 1sed -n &amp;#39;25p&amp;#39; test.txt Wyświetlenie 6 pierwszych linii pliku 1sed &amp;#39;6q&amp;#39; test.txt Wyświetlenie zakresu linii pliku Wyświetla linię z zakresu od 1 do 4 pliku test.txt
1sed -n &amp;#39;1,4&amp;#39; test.txt Wyświetlenie dwóch różnych linii Wyświetlenie 4 i 6 linii pliku
1sed -n &amp;#39;4p;6p&amp;#39; test.txt 24 | 36 lsadfjla Wyświetlenie linii od 3 do ostatniej 1sed -n &amp;#39;3,$p&amp;#39; test.</description>
    </item>
    
    <item>
      <title>Generowanie liczb losowych</title>
      <link>https://mohdur.github.io/post/generowanie-liczb-losowych/</link>
      <pubDate>Thu, 22 Oct 2020 01:31:47 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/generowanie-liczb-losowych/</guid>
      <description>Wygenerowanie liczby losowej o określonej długości W tym wypadku jest to 20 cyfr
1&amp;lt; /dev/urandom | tr -cd &amp;#39;[:digit:]&amp;#39; | head -c20; echo </description>
    </item>
    
    <item>
      <title>Aliasy BASH ZSH</title>
      <link>https://mohdur.github.io/post/aliasy-bash-zsh/</link>
      <pubDate>Thu, 22 Oct 2020 01:20:20 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/aliasy-bash-zsh/</guid>
      <description>Część aliasów ma ustawione parametry dla polecenia np. alias ss=&#39;ss -tumanp&#39; jeśli będziemy chcieli pominąć te parametry należy podać pełną ścieżke do polecenia ss: /usr/sbin/ss.
Ścieżki do katalogów 1[ -d ~/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/bin 2[ -d ~/.local/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/.local/bin 3[ -d ~/.cargo/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/.cargo/bin 4[ -d ~/go/bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/go/bin 5[ -d ~/node_modules/.bin ] &amp;amp;&amp;amp; export PATH=$PATH:~/node_modules/.bin Aliasy podstawowe 1alias q=exit 2alias Q=exit 3alias more=less 4alias so=&amp;#39;source&amp;#39; 5alias psgrep=&amp;#39;ps ax | grep &amp;#39; 6alias cp=&amp;#34;cp -i&amp;#34; 7alias df=&amp;#39;df -h&amp;#39; 8alias free=&amp;#39;free -m&amp;#39; 9alias mountt=&amp;#39;mount | column -t&amp;#39; Aliasy narzędzi sieciowych 1alias ip=&amp;#39;sudo ip&amp;#39; 2alias ifconfig=&amp;#39;ip a s&amp;#39; 3alias myip=&amp;#39;ip-br -c a&amp;#39; 4alias arp=&amp;#39;ip n&amp;#39; 5alias iptraf=&amp;#39;sudo iptraf-ng&amp;#39; 6alias ss=&amp;#39;sudo ss -tumanp&amp;#39; 7alias netstat=&amp;#39;sudo netstat&amp;#39; 8alias nmap=&amp;#39;sudo nmap&amp;#39; 9alias lsof=&amp;#39;sudo lsof&amp;#39; Aliasy sudo 1alias cryptsetup=&amp;#39;sudo cryptsetup&amp;#39; 2alias fdisk=&amp;#39;sudo fdisk&amp;#39; 3alias cfdisk=&amp;#39;sudo cfdisk&amp;#39; 4alias mount=&amp;#39;sudo mount&amp;#39; 5alias m=&amp;#39;sudo mount&amp;#39; 6alias umount=&amp;#39;sudo umount&amp;#39; 7alias iotop=&amp;#39;sudo iotop&amp;#39; Aliasy ls 1alias ls=&amp;#39;ls --color=auto&amp;#39; 2alias ll=&amp;#39;ls -alFh&amp;#39; 3alias la=&amp;#39;ls -Ah&amp;#39; 4alias l=&amp;#39;ls -CFh&amp;#39; Katalogi 1alias b=&amp;#34;cd ~/Books&amp;#34; 2alias h=&amp;#34;cd ~&amp;#34; 3alias .</description>
    </item>
    
    <item>
      <title>Uruchomienie skryptu po wykryciu zmian</title>
      <link>https://mohdur.github.io/post/uruchomienie-skryptu-po-wykryciu-zmian/</link>
      <pubDate>Wed, 21 Oct 2020 21:56:55 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/uruchomienie-skryptu-po-wykryciu-zmian/</guid>
      <description>Za pomocą skryptu, który operuje na sumach kontrolnych, można monitorować wybrany plik. Jeśli monitorowany plik się zmieni lub zostanie zapisany, skrypt automatycznie go uruchomi, dzięki temu nie trzeba za każdym razem uruchomiać go podczas kodowania.
Istnieją programy, które wykonują to samo, takie jak entr czy inotifywait, niesety trzeba je doinstalować, o ile nie chcemy używać ich dodatkowych funkcji, można korzystać z tego skryptu.
Jako parametr należy podać nazwę pliku, który chcemy monitorować.</description>
    </item>
    
    <item>
      <title>Pobranie ostatniego wydania programu z repozytorium Github</title>
      <link>https://mohdur.github.io/post/pobranie-ostatniego-wydania-programu-z-repozytorium-github/</link>
      <pubDate>Thu, 15 Oct 2020 21:20:19 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/pobranie-ostatniego-wydania-programu-z-repozytorium-github/</guid>
      <description>Pobranie wersji binarnej 1#!/usr/bin/env bash 2 3curl -s https://api.github.com/repos/junegunn/fzf-bin/releases/latest \ 4 | grep browser_download_url \ 5 | grep linux_amd64 \ 6 | cut -d &amp;#39;&amp;#34;&amp;#39; -f 4 \ 7 | wget -O fzf-bin.tgz -qi - 8 9tar xf fzf-bin.tgz 10rm fzf-bin.tgz Pobranie źródeł Pobranie śródeł kiedy są tworzone wydania
1#!/usr/bin/env bash 2 3curl -s https://api.github.com/repos/lotabout/skim/releases/latest \ 4 | grep tarball_url \ 5 | cut -d &amp;#39;&amp;#34;&amp;#39; -f 4 \ 6 | wget -O skim-src.</description>
    </item>
    
    <item>
      <title>Nazwa pliku, wyśwetlanie nazwy i rozszerzenia</title>
      <link>https://mohdur.github.io/post/nazwa-pliku-wy%C5%9Bwetlanie-nazwy-i-rozszerzenia/</link>
      <pubDate>Wed, 14 Oct 2020 15:17:50 +0200</pubDate>
      
      <guid>https://mohdur.github.io/post/nazwa-pliku-wy%C5%9Bwetlanie-nazwy-i-rozszerzenia/</guid>
      <description>Nazwa pliku bez ścieżki Na podstawie prostego skryptu pokażę jak wyświetlić nazwę pliku bez katalogu oraz jak wyświetlić samą nazwę pliku bez rozszerzenia.
Pętla for pokazuje wszystkie pliki w katalogu katalog wraz z nazwą tego katalogu np. katalog/nazwa-pliku.txt, chcąc uzyskać samą nazwę pliku użyjemy komendy basename.
1for i in katalog/*.txt 2do 3 PLIK=$(basename $i | cut -d &amp;#39;.&amp;#39; -f 1) 4 echo &amp;#34;$PLIK&amp;#34; 5done Inny przykład użycia komendy basename
1VIMRC_DIR=&amp;#34;$HOME/.vim/vimrc&amp;#34; 2VIMRC=$(basename &amp;#34;$VIMRC_DIR&amp;#34;) 3echo $VIMRC 1vimrc Użycie komendy basename</description>
    </item>
    
  </channel>
</rss>
